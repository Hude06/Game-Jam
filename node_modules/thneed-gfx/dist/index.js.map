{"mappings":"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","sources":["src/index.ts","src/core.ts","src/canvas.ts","src/style.ts","src/sprites.ts","src/components.ts","src/containers.ts","src/util.ts","src/debug.ts","src/table.ts"],"sourcesContent":["export * from \"./core\"\nexport * from \"./canvas\"\nexport * from \"./sprites\"\nexport * from \"./components\"\nexport * from \"./containers\"\nexport * from \"./util\"\nexport * from \"./style\"\nexport * from \"./debug\"\nexport * from \"./table\"\nconsole.log(\"loading thneed\")","import {SurfaceContext} from \"./canvas\";\nimport {ActionButton, BaseSelectButton} from \"./components\";\n\ntype EventCategory = string\ntype EventType = string\ntype EventDirection = \"down\" | \"up\"\n\nexport class CoolEvent {\n    type:EventType\n    category:EventCategory\n    timestamp:number\n    details:any\n    ctx:SurfaceContext\n    target:any\n    direction:EventDirection\n    stopped: any;\n\n    constructor(ctx: SurfaceContext, category:EventCategory, type:EventType) {\n        this.ctx = ctx\n        this.category = category\n        this.type = type\n    }\n}\n\nexport type Modifiers = {\n    shift:boolean\n    alt:boolean\n    ctrl:boolean\n    meta:boolean\n}\n\nexport const POINTER_CATEGORY:EventCategory = \"POINTER_CATEGORY\"\nexport const POINTER_MOVE:EventType = \"POINTER_MOVE\"\nexport const POINTER_DRAG:EventType = \"POINTER_DRAG\"\nexport const POINTER_DOWN:EventType = \"POINTER_DOWN\"\nexport const POINTER_UP:EventType = \"POINTER_UP\"\nexport const PRIMARY_BUTTON:number = 0\nexport const SECONDARY_BUTTON:number = 2\n\nexport function gen_id(prefix: string) {\n    return `${prefix}_${Math.floor(Math.random() * 100000)}`\n}\n\nexport type Callback = (any) => any;\n\nexport class SuperArray {\n    private data: any[];\n\n    constructor() {\n        this.data = []\n    }\n\n    clear() {\n        this.data = []\n    }\n\n    push_end(value: any) {\n        this.data.push(value)\n    }\n\n    length() {\n        return this.data.length\n    }\n\n    pop_start() {\n        return this.data.shift()\n    }\n\n    forEach(cb: Callback) {\n        // @ts-ignore\n        this.data.forEach((v, i) => cb(v, i))\n    }\n}\n\nexport class Point {\n    x: number\n    y: number\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    translate(x: number, y: number) {\n        return new Point(this.x - x, this.y - y)\n    }\n\n    divide_floor(scale: number) {\n        return new Point(\n            Math.floor(this.x / scale),\n            Math.floor(this.y / scale)\n        )\n    }\n\n    add(pt: Point) {\n        return new Point(\n            this.x + pt.x,\n            this.y + pt.y,\n        )\n    }\n\n    set(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    copy_from(pt: Point) {\n        this.x = pt.x\n        this.y = pt.y\n    }\n\n    clone() {\n        return new Point(this.x, this.y)\n    }\n\n    subtract(trans: Point) {\n        return new Point(\n            this.x - trans.x,\n            this.y - trans.y\n        )\n    }\n\n    magnitude() {\n        return Math.sqrt(this.x*this.x + this.y*this.y)\n    }\n\n    divide(val:number) {\n        return new Point(this.x/val, this.y/val)\n    }\n\n    scale(val:number) {\n        return new Point(this.x*val, this.y*val)\n    }\n    unit() {\n        return this.divide(this.magnitude())\n    }\n\n    toString(): String {\n        return `Point(${this.x},${this.y})`\n    }\n}\n\nexport class Rect {\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    clone() {\n        return new Rect(this.x,this.y,this.w,this.h)\n    }\n\n    contains(pt: Point): boolean {\n        if (pt.x < this.x) return false;\n        if (pt.y < this.y) return false;\n        if (pt.x >= this.x + this.w) return false;\n        if (pt.y >= this.y + this.h) return false;\n        return true;\n    }\n\n    bottom() {\n        return this.y + this.h;\n    }\n\n    right() {\n        return this.x + this.w;\n    }\n\n    shrink(v: number): Rect {\n        return new Rect(this.x + v, this.y + v, this.w - v - v, this.h - v - v)\n    }\n    position():Point {\n        return new Point(this.x,this.y)\n    }\n    size():Size {\n        return new Size(this.w,this.h)\n    }\n    center():Point {\n        return new Point(this.x+this.w/2,this.y+this.h/2)\n    }\n\n    add_position(pt:Point) {\n        this.x += pt.x\n        this.y += pt.y\n    }\n\n    intersects(rect:Rect) {\n        if(this.contains(new Point(rect.x,rect.y))) return true\n        if(this.contains(new Point(rect.x,rect.y+rect.h))) return true\n        if(this.contains(new Point(rect.x+rect.w,rect.y))) return true\n        if(this.contains(new Point(rect.x+rect.w,rect.y+rect.h))) return true\n        return false\n    }\n\n    contains_rect(rect:Rect):boolean {\n        if(!this.contains(new Point(rect.x,rect.y))) return false\n        if(!this.contains(new Point(rect.x,rect.y+rect.h))) return false\n        if(!this.contains(new Point(rect.x+rect.w,rect.y))) return false\n        if(!this.contains(new Point(rect.x+rect.w,rect.y+rect.h))) return false\n        return true\n    }\n\n}\n\nexport class Size {\n    w: number;\n    h: number;\n\n    constructor(w, h) {\n        this.w = w\n        this.h = h\n    }\n\n    shrink(pad: number) {\n        return new Size(this.w - pad * 2, this.h - pad * 2)\n    }\n\n    grow(pad: number) {\n        return new Size(this.w + pad * 2, this.h + pad * 2)\n    }\n\n    subtract(delta: Point) {\n        return new Size(this.w - delta.x, this.h - delta.y)\n    }\n\n    add(delta: Point) {\n        return new Size(this.w + delta.x, this.h + delta.y)\n    }\n\n    contains(cursor: Point): boolean {\n        if (cursor.x < 0) return false\n        if (cursor.y < 0) return false\n        if (cursor.x > this.w) return false\n        if (cursor.y > this.h) return false\n        return true\n    }\n\n    toString(): String {\n        return `${this.w}x${this.h}`\n    }\n\n    equals(s: Size) {\n        return this.w === s.w && this.h === s.h\n    }\n\n    clone():Size {\n        return new Size(this.w,this.h)\n    }\n}\n\nexport class PointerEvent extends CoolEvent {\n    position:Point\n    delta:Point\n    button:number\n    modifiers:Modifiers\n\n    constructor(ctx:SurfaceContext, type: EventType, position: Point, delta:Point) {\n        super(ctx, POINTER_CATEGORY, type);\n        this.position = position\n        this.delta = delta\n        this.direction = 'down'\n    }\n}\n\nexport const KEYBOARD_CATEGORY:EventCategory = \"KEYBOARD_CATEGORY\"\nexport const KEYBOARD_DOWN:EventType = 'KEYBOARD_DOWN'\nexport const KEYBOARD_UP:EventType = 'KEYBOARD_UP'\nexport class KeyboardEvent extends CoolEvent {\n    key:string\n    code:string\n    modifiers:Modifiers\n    constructor(surface: SurfaceContext, type:EventType) {\n        super(surface, KEYBOARD_CATEGORY, type);\n    }\n}\n\nexport const SCROLL_CATEGORY:EventCategory = \"SCROLL_CATEGORY\"\nexport const SCROLL_EVENT:EventType = \"SCROLL_EVENT\"\nexport class ScrollEvent extends CoolEvent {\n    delta:Point\n    position:Point\n    modifiers:Modifiers\n\n    constructor(surface: SurfaceContext, type: EventType, position: Point, delta: Point) {\n        super(surface, SCROLL_CATEGORY, type)\n        this.position = position\n        this.delta = delta\n    }\n}\n\nexport const FOCUS_CATEGORY:EventCategory = \"FOCUS_CATEGORY\"\nexport const FOCUS_GAINED:EventType = \"FOCUS_GAINED\"\nexport const FOCUS_LOST:EventType = \"FOCUS_LOST\"\nexport class FocusEvent extends CoolEvent {\n    constructor(surface: SurfaceContext, FOCUS_GAINED: EventType) {\n        super(surface, FOCUS_CATEGORY, FOCUS_GAINED);\n    }\n}\n\nexport const COMMAND_CATEGORY:EventCategory = \"COMMAND_CATEGORY\"\nexport const COMMAND_ACTION:EventType = \"action\"\nexport class CommandEvent extends CoolEvent {\n    constructor(ctx: SurfaceContext, type: EventType, target: any) {\n        super(ctx, COMMAND_CATEGORY, type);\n        this.target = target\n    }\n}\nexport const COMMAND_CHANGE:EventType = \"change\"\nexport type Action = { caption: string }\n\nexport const CLIPBOARD_CATEGORY:EventCategory = \"CLIPBOARD_CATEGORY\"\nexport const CLIPBOARD_COPY:EventType = \"ClipboardCopy\"\nexport const CLIPBOARD_CUT:EventType = \"ClipboardCut\"\nexport const CLIPBOARD_PASTE:EventType = \"ClipboardPaste\"\nexport class ClipboardEvent extends CoolEvent {\n    content:any\n    mimetype:string\n}\n\nexport interface View {\n    hflex(): boolean\n    vflex(): boolean\n    size():Size\n    set_size(size:Size)\n    position():Point\n    set_position(point:Point)\n    layout(g: SurfaceContext, available: Size): Size\n    draw(g: SurfaceContext): void\n    visible(): boolean\n    input(event: CoolEvent): void\n    on(type: string, cb: Callback): void\n    off(type: string, cb: Callback): void\n    name(): string\n}\n\nexport interface ParentView {\n    is_parent_view(): boolean,\n\n    get_children(): View[]\n    find_child(id:string):View|null\n\n    clip_children(): boolean,\n    // should the parent be counted as a mouse focus\n    can_receive_mouse(): boolean\n\n}\n\nexport abstract class BaseParentView implements View, ParentView {\n    protected _hflex: boolean\n    protected _vflex: boolean\n    id: string\n    protected _visible: boolean\n    protected _children: View[]\n    private _listeners: Map<string, Callback[]>\n    protected _name: string\n    private _size: Size;\n    private _position: Point;\n\n    constructor(id: string) {\n        this.id = id\n        this._size = new Size(100,100)\n        this._position = new Point(0,0)\n        this._children = []\n        this._name = 'unnamed'\n        this._listeners = new Map<string, Callback[]>()\n        this._visible = true\n        this._hflex = false\n        this._vflex = false\n    }\n\n    hflex(): boolean {\n        return this._hflex\n    }\n    set_hflex(hflex) {\n        this._hflex = hflex\n    }\n    vflex(): boolean {\n        return this._vflex\n    }\n    set_vflex(vflex) {\n        this._vflex = vflex\n    }\n\n    protected log(...args) {\n        console.log(this.name(), ...args)\n    }\n\n    size():Size {\n        return this._size\n    }\n    set_size(size: Size) {\n        this._size = size\n    }\n    position(): Point {\n        return this._position\n    }\n    set_position(point: Point) {\n        this._position = point\n    }\n\n    clip_children(): boolean {\n        return false;\n    }\n\n    draw(g: SurfaceContext): void {\n    }\n\n    get_children(): View[] {\n        return this._children\n    }\n    find_child(id: string): View|null {\n        // @ts-ignore\n        return this.get_children().find((ch:View) => ch.id === id)\n    }\n\n    add(view: View) {\n        this._children.push(view)\n    }\n\n    remove(view: View) {\n        this._children = this._children.filter(ch => ch !== view)\n    }\n\n    input(event: CoolEvent): void {\n    }\n\n    is_parent_view(): boolean {\n        return true\n    }\n\n    name(): string {\n        return this._name\n    }\n    set_name(name:string) {\n        this._name = name\n    }\n\n\n    on(type: string, cb: Callback) {\n        this._get_listeners(type).push(cb)\n    }\n\n    off(type: string, cb: Callback) {\n        this._listeners.set(type, this._get_listeners(type).filter(c => c != cb))\n    }\n\n    fire(type: string, payload: any) {\n        this._get_listeners(type).forEach(cb => cb(payload))\n    }\n\n    visible(): boolean {\n        return this._visible\n    }\n\n    abstract layout(g: SurfaceContext, available: Size): Size\n\n    private _get_listeners(type: string) {\n        if (!this._listeners.has(type)) this._listeners.set(type, [])\n        return this._listeners.get(type)\n    }\n\n    can_receive_mouse(): boolean {\n        return false;\n    }\n}\n\nexport abstract class BaseView implements View {\n    protected _hflex: boolean;\n    protected _vflex: boolean;\n    protected _visible: boolean\n    protected _name: string\n    private _listeners: Map<string, Callback[]>\n    protected id: string;\n    private _size: Size;\n    private _position: Point;\n\n    constructor(id: string) {\n        this.id = id\n        this._size = new Size(100,100)\n        this._position = new Point(0,0)\n        this._visible = true\n        this._name = 'unnamed'\n        this._listeners = new Map<string, Callback[]>()\n        this._hflex = false\n        this._vflex = false\n    }\n\n    hflex(): boolean {\n        return this._hflex\n    }\n    vflex(): boolean {\n        return this._vflex\n    }\n\n    protected log(...args) {\n        console.log(`${this.name()}:`, ...args)\n    }\n\n    private _get_listeners(type: string) {\n        if (!this._listeners.has(type)) this._listeners.set(type, [])\n        return this._listeners.get(type)\n    }\n\n    on(type: string, cb: Callback) {\n        this._get_listeners(type).push(cb)\n    }\n\n    off(type: string, cb: Callback) {\n        this._listeners.set(type, this._get_listeners(type).filter(c => c != cb))\n    }\n\n    fire(type: string, payload: any) {\n        this._get_listeners(type).forEach(cb => cb(payload))\n    }\n\n    size():Size {\n        return this._size\n    }\n    set_size(size: Size) {\n        this._size = size\n    }\n    position(): Point {\n        return this._position\n    }\n    set_position(point: Point) {\n        this._position = point\n    }\n\n    input(event: CoolEvent): void {\n    }\n\n    name(): string {\n        return this._name\n    }\n    set_name(name:string) {\n        this._name = name\n    }\n\n    visible(): boolean {\n        return this._visible\n    }\n    set_visible(visible:boolean) {\n        this._visible = visible\n    }\n\n    abstract layout(g: SurfaceContext, available: Size): Size\n\n    abstract draw(g: SurfaceContext): void\n}\n\nexport function with_props(comp: View, json: any): View {\n    if (!json) throw new Error(\"null json object\")\n    if (!comp) throw new Error(\"null component\")\n    Object.keys(json).forEach((key: string) => {\n        //already handled type\n        if (key === 'type') return\n        //handle children separately\n        if (key === 'children') return\n        //id is a property instead of a setter\n        if (key === 'id') {\n            // @ts-ignore\n            comp.id = json.id\n            return\n        }\n        let setter = `set_${key}`\n        // console.log(\"setting\",key,setter)\n        if (comp[setter]) {\n            comp[setter](json[key])\n        } else {\n            console.log(\"no setter\", setter)\n        }\n    })\n    return comp\n}\n\nexport function with_action(view: ActionButton, cb: Callback): View {\n    view.on(COMMAND_ACTION, cb)\n    return view\n}\nexport function with_change(view: BaseSelectButton, cb: Callback): View {\n    view.on(COMMAND_CHANGE, cb)\n    return view\n}","import {StandardTextColor, StandardTextHeight, StandardTextStyle} from \"./style\";\nimport {\n    Callback,\n    FOCUS_GAINED,\n    FOCUS_LOST,\n    FocusEvent,\n    KEYBOARD_DOWN,\n    KEYBOARD_UP,\n    KeyboardEvent, Modifiers,\n    ParentView, Point,\n    POINTER_DOWN,\n    POINTER_DRAG, POINTER_MOVE,\n    POINTER_UP,\n    PointerEvent, Rect,\n    SCROLL_EVENT,\n    ScrollEvent, Size,\n    View\n} from \"./core\";\nimport {Sheet, Sprite, SpriteGlyph, Tilemap} from \"./sprites\";\n\nexport function log(...args) {\n    console.log('SNAKE:', ...args);\n}\n\nconst CLEAR_COLOR = '#f0f0f0'\n\nexport function rect_from_pos_size(point: Point, size: Size) {\n    return new Rect(\n        point.x,\n        point.y,\n        size.w,\n        size.h\n    )\n}\n\nclass MouseInputService {\n    private surface: SurfaceContext;\n    private down: boolean;\n    private path: [];\n    private last_point: Point;\n    private target: never;\n    constructor(surface: CanvasSurface) {\n        this.surface = surface\n        this.down = false\n        this.last_point = new Point(0,0)\n    }\n    trigger_mouse_down(position:Point, button:number) {\n        this.down = true;\n        this.last_point = position\n        this.path = this.scan_path(position)\n        this.target = this.path[this.path.length-1] // last\n        let evt = new PointerEvent(this.surface, POINTER_DOWN, position, new Point(0,0))\n        evt.button = button\n        evt.target = this.target\n        this.propagatePointerEvent(evt,this.path)\n        this.surface.repaint()\n    }\n\n    trigger_mouse_move(position: Point, button: number) {\n        let delta = position.subtract(this.last_point)\n        this.last_point = position.clone()\n        let evt\n        if(this.down) {\n            evt = new PointerEvent(this.surface, POINTER_DRAG, position, delta)\n        } else {\n            this.path = this.scan_path(position)\n            evt = new PointerEvent(this.surface, POINTER_MOVE, position, delta)\n        }\n        evt.button = button\n        evt.target = this.path[this.path.length - 1] // last\n        this.propagatePointerEvent(evt, this.path)\n        this.surface.repaint()\n    }\n\n    trigger_mouse_up(position: Point, button: number) {\n        this.down = false\n        let evt = new PointerEvent(this.surface, POINTER_UP, position, new Point(0,0))\n        evt.button = button\n        evt.target = this.path[this.path.length-1] // last\n        this.propagatePointerEvent(evt,this.path)\n        this.surface.repaint()\n    }\n\n    trigger_scroll(position:Point, delta:Point) {\n        this.path = this.scan_path(position)\n        let evt = new ScrollEvent(this.surface, SCROLL_EVENT, position, delta)\n        this.propagateScrollEvent(evt,this.path)\n    }\n\n    private calculate_path_to_cursor(view: View, position: Point, path:View[]):boolean {\n        // this.log('searching for',position,'on',view.name())\n        if(!view) return false\n        if (!view.visible()) return false\n        let bounds = rect_from_pos_size(view.position(),view.size())\n        if (bounds.contains(position)) {\n            // @ts-ignore\n            if (view.is_parent_view && view.is_parent_view()) {\n                let parent = view as unknown as ParentView;\n                // go in reverse order to the top drawn children are picked first\n                for (let i = parent.get_children().length-1; i >= 0; i--) {\n                    let ch = parent.get_children()[i]\n                    let pos = position.subtract(view.position())\n                    let picked = this.calculate_path_to_cursor(ch,pos,path)\n                    if(picked) {\n                        path.unshift(ch)\n                        return true\n                    }\n                }\n                if(parent.can_receive_mouse()) {\n                    return true\n                }\n            } else {\n                return true\n            }\n        }\n        return false\n    }\n\n    private log(...args) {\n        console.log('MouseService:',...args)\n    }\n\n    private scan_path(position: Point) {\n        let path:[] = []\n        this.calculate_path_to_cursor(this.surface.root(),position,path)\n        // this.log(\"final path is\",path)\n        return path\n    }\n\n    private propagatePointerEvent(evt: PointerEvent, path: []) {\n        let stopped = false\n        let pt = evt.position\n\n        path.forEach((view:View) => {\n            if(stopped) {\n                this.log(\"done\")\n                return\n            }\n            // this.log(\"down: view\",view.name())\n            evt.position = evt.position.subtract(view.position())\n            view.input(evt)\n            if(evt.stopped) {\n                stopped = true\n            }\n        })\n    }\n\n    private propagateScrollEvent(evt: ScrollEvent, path: []) {\n        let stopped = false\n        let pt = evt.position.clone()\n        evt.direction = \"down\"\n        path.forEach((view:View) => {\n            if(stopped) {\n                return\n            }\n            evt.position = evt.position.subtract(view.position())\n            view.input(evt)\n            if(evt.stopped) {\n                stopped = true\n            }\n        })\n        if(stopped) return;\n        path.reverse()\n        evt.direction = \"up\"\n        path.forEach((view:View) => {\n            if(stopped) {\n                // this.log(\"done\")\n                return\n            }\n            evt.position = evt.position.add(view.position())\n            view.input(evt)\n            if(evt.stopped) {\n                stopped = true\n            }\n        })\n    }\n\n}\n\nclass KeyboardInputService {\n    private surface: CanvasSurface;\n    private log(...args) {\n        console.log('KeyboardService:',...args)\n    }\n    constructor(surface:CanvasSurface) {\n        this.surface = surface\n    }\n\n    dispatch_keyboard_focus_change(old_focus: View, new_focus: View) {\n        let e_old = new FocusEvent(this.surface, FOCUS_LOST)\n        //send focus lost to old focus\n        if(old_focus) old_focus.input(e_old)\n        //send focus gained to new focus\n        let e_new = new FocusEvent(this.surface, FOCUS_GAINED)\n        if(new_focus) new_focus.input(e_new)\n        //don't use a path, no one can intercept?\n    }\n\n    private calculate_path_to_keyboard_focus(root:View, target: View): View[]|boolean {\n        if(!root) return false\n        if(!root.visible()) return false\n        if(root === target) return [root]\n        // @ts-ignore\n        if (root.is_parent_view && root.is_parent_view()) {\n            let parent = root as unknown as ParentView;\n            for (let i = parent.get_children().length-1; i >= 0; i--) {\n                let ch = parent.get_children()[i]\n                // this.log('checking child',ch)\n                let res = this.calculate_path_to_keyboard_focus(ch,target)\n                if(res) {\n                    (res as View[]).unshift(root)\n                    return res as View[]\n                }\n            }\n        }\n    }\n\n    trigger_key_down(key: string, code: string, modifiers: Modifiers) {\n        let evt = new KeyboardEvent(this.surface, KEYBOARD_DOWN)\n        evt.key = key\n        evt.code = code\n        evt.modifiers = modifiers\n        let path = this.calculate_path_to_keyboard_focus(this.surface.root(),this.surface.keyboard_focus()) as View[]\n        this.surface.propagateKeyboardEvent(evt, path)\n        this.surface.repaint()\n    }\n\n    trigger_key_up(key: string, code: string, modifiers: Modifiers) {\n        let evt = new KeyboardEvent(this.surface, KEYBOARD_UP)\n        evt.key = key\n        evt.code = code\n        evt.modifiers = modifiers\n        let path = this.calculate_path_to_keyboard_focus(this.surface.root(),this.surface.keyboard_focus()) as View[]\n        this.surface.propagateKeyboardEvent(evt, path)\n        this.surface.repaint()\n\n    }\n}\n\nexport interface SurfaceContext {\n    size():Size;\n    root():View;\n    set_root(root:View);\n    repaint();\n    clear();\n    fill(rect: Rect, color: string);\n    stroke(rect: Rect, color: string);\n    fillBackgroundSize(size:Size, color: string);\n    strokeBackgroundSize(size: Size, color: string);\n    measureText(caption: string, font_name?:string):Size;\n    fillStandardText(caption: string, x: number, y: number, font_name?:string, scale?:number);\n    draw_glyph(codepoint: number, x:number, y:number, font_name: string, fill: string, scale?:number);\n    set_sprite_scale(scale:number);\n    set_smooth_sprites(sprite_smoothing:boolean)\n    draw_sprite(pt:Point, sprite: Sprite);\n\n    keyboard_focus():View;\n    set_keyboard_focus(view:View);\n    is_keyboard_focus(view:View);\n    release_keyboard_focus(view:View);\n    view_to_local(pt: Point, view: View):Point;\n    find_by_name(name:string):View|null;\n}\nexport class CanvasSurface implements SurfaceContext {\n    private w: number;\n    private h: number;\n    private _sprite_scale: number;\n    private _sprite_smooth: boolean;\n\n    size(): Size {\n        return new Size(this.w,this.h)\n    }\n\n    private canvas: HTMLCanvasElement;\n    private _root: View;\n    ctx: CanvasRenderingContext2D;\n    debug: boolean;\n    private scale: number;\n    private _input_callback: Callback;\n    protected _keyboard_focus: View;\n    private fonts:Map<string,CanvasFont>\n    private global_smoothing = true\n    private _pointer_target: View|null;\n    private mouse: MouseInputService;\n    private keyboard: KeyboardInputService;\n\n    constructor(w: number, h: number, scale?:number) {\n        this.log(\"making canvas \",w,h)\n        this.w = w;\n        this.h = h;\n        this.scale = this.scale || 1\n        this._sprite_scale = 1\n        this._sprite_smooth = true\n        this.canvas = document.createElement('canvas');\n        this.canvas.width = w * window.devicePixelRatio * this.scale\n        this.canvas.height = h * window.devicePixelRatio * this.scale\n        this.log(\"real canvas is\",this.canvas.width,this.canvas.height)\n        this.canvas.setAttribute('tabindex', '0');\n        //turn this on for high-dpi support\n        this.canvas.style.width = `${this.w * this.scale}px`\n        this.canvas.style.height = `${this.h * this.scale}px`\n        this.log(\"canvas style = \", this.canvas.style)\n        this.ctx = this.canvas.getContext('2d');\n        this.debug = false;\n        this.clear()\n        this.fonts = new Map()\n        this._pointer_target = null\n    }\n\n    addToPage() {\n        document.body.appendChild(this.canvas);\n    }\n    set_root(root: View) {\n        this._root = root;\n    }\n    root():View {\n        return this._root\n    }\n\n    repaint() {\n        if(this.debug) console.time(\"repaint\");\n        this.layout_stack();\n        this.clear();\n        this.draw_stack()\n        if(this.debug) console.timeEnd(\"repaint\");\n    }\n\n    clear() {\n        this.ctx.fillStyle = CLEAR_COLOR\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n\n    private layout_stack() {\n        if(!this._root) {\n            console.warn(\"root is null\")\n        } else {\n            let available_size = new Size(this.w,this.h)\n            // this.log(\"layout_stack with size\",available_size)\n            let size = this._root.layout(this, available_size)\n            // console.log(\"canvas, root requested\",size)\n        }\n    }\n    private draw_stack() {\n        this.ctx.imageSmoothingEnabled = this.global_smoothing\n        this.ctx.save();\n        this.ctx.translate(0.5, 0.5);\n        this.ctx.scale(window.devicePixelRatio, window.devicePixelRatio)\n        this.ctx.scale(this.scale, this.scale)\n        this.debug_draw_rect(new Rect(0, 0, this.w - 1, this.h - 1), 'canvas')\n        if(this._root) this.draw_view(this._root)\n        this.ctx.restore()\n    }\n\n    private draw_view(view: View) {\n        this.ctx.save();\n        let pos = view.position()\n        this.ctx.translate(pos.x, pos.y)\n        // @ts-ignore\n        // console.log(\"drawing\",view.id,view.name())\n        if(view.visible()) {\n            view.draw(this);\n        }\n        // @ts-ignore\n        if (view.is_parent_view && view.is_parent_view() && view.visible()) {\n            let parent = view as unknown as ParentView;\n            if(parent.clip_children()) {\n                this.ctx.beginPath()\n                let size = view.size()\n                this.ctx.rect(0,0,size.w,size.h);\n                this.ctx.clip()\n            }\n            parent.get_children().forEach(ch => {\n                if (this.debug) {\n                    this.ctx.save();\n                }\n                this.draw_view(ch);\n                if (this.debug) {\n                    this.ctx.restore()\n                }\n            })\n        }\n        let bds = rect_from_pos_size(view.position(),view.size())\n        // @ts-ignore\n        this.debug_draw_rect(bds, view.name())\n        this.ctx.restore()\n    }\n\n    fill(rect: Rect, color: string) {\n        this.ctx.fillStyle = color\n        this.ctx.fillRect(rect.x, rect.y, rect.w, rect.h);\n    }\n\n    stroke(rect: Rect, color: string) {\n        this.ctx.lineWidth = 1 * this.scale\n        this.ctx.strokeStyle = color\n        this.ctx.strokeRect(rect.x, rect.y, rect.w, rect.h);\n    }\n    fillBackgroundSize(size:Size, color: string) {\n        this.ctx.fillStyle = color\n        this.ctx.fillRect(0, 0, size.w, size.h);\n    }\n    strokeBackgroundSize(size: Size, color: string) {\n        this.ctx.strokeStyle = color\n        this.ctx.strokeRect(0,0, size.w, size.h);\n    }\n    private debug_draw_rect(bds: Rect, title: string) {\n        if (!this.debug) return\n        this.ctx.strokeStyle = 'black'\n        this.ctx.lineWidth = 0.5;\n        let cx = bds.x + bds.w/2\n        let cy = bds.y + bds.h/2\n        for (let i = 0; i < 3; i++) {\n            this.ctx.beginPath()\n            this.ctx.strokeStyle = (i % 2 === 1) ? 'red' : 'black'\n            this.ctx.rect(bds.x + i, bds.y + i, bds.w - i * 2, bds.h - i * 2);\n            this.ctx.stroke()\n        }\n        let str = `${title} (${bds.x.toFixed(1)},${bds.y.toFixed(1)}) (${bds.w.toFixed(1)}x${bds.h.toFixed(1)})`\n        for (let i = 0; i < 3; i++) {\n            this.ctx.font = '10px sans-serif';\n            this.ctx.fillStyle = 'white'\n            this.ctx.fillText(str, cx+3 + i, cy+3 + i)\n        }\n        for (let i = 0; i < 1; i++) {\n            this.ctx.font = '10px sans-serif';\n            this.ctx.fillStyle = 'black'\n            this.ctx.fillText(str, cx+3 + i + 1, cy+3 + i + 1)\n        }\n    }\n    fillRect(x: number, y: number, w: number, h: number, color: string) {\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(x,y,w,h)\n    }\n    private screen_to_local(evt: MouseEvent):Point {\n        let rect = this.canvas.getBoundingClientRect();\n        let pt = new Point(evt.x-rect.x,evt.y-rect.y);\n        pt.x /= this.scale\n        pt.y /= this.scale\n        return pt\n    }\n\n    propagateKeyboardEvent(evt: KeyboardEvent, path:View[]) {\n        if(this._input_callback) this._input_callback(evt)\n        if(!this._keyboard_focus) {\n            // if(this._input_callback) this._input_callback(evt)\n            return\n        }\n        if(!path) {\n            this.log(\"no path, can't propagate\")\n            return\n        }\n        let stopped = false\n        path.forEach((view:View) => {\n            if(stopped) {\n                this.log(\"bailing out early\")\n                return\n            }\n            view.input(evt)\n            if(evt.stopped) stopped = true\n        })\n        // if(this._keyboard_focus) this._keyboard_focus.input(evt)\n        // if(this._input_callback) this._input_callback(evt)\n    }\n\n    keyboard_focus(): View {\n        return this._keyboard_focus\n    }\n    set_keyboard_focus(view:View) {\n        let old = this._keyboard_focus\n        this._keyboard_focus = view\n        this.keyboard.dispatch_keyboard_focus_change(old,this._keyboard_focus)\n    }\n    is_keyboard_focus(view:View) {\n        return view === this._keyboard_focus\n    }\n    release_keyboard_focus(view:View) {\n        this._keyboard_focus = null\n    }\n\n    on_input(cb: Callback) {\n        this._input_callback = cb\n    }\n\n    measureText(caption: string, font_name?:string):Size {\n        if(font_name && this.fonts.has(font_name)) {\n            let font = this.fonts.get(font_name)\n            if(font) {\n                return font.measureText(caption)\n            }\n        }\n        this.ctx.font = StandardTextStyle\n        let metrics = this.ctx.measureText(caption)\n        if('fontBoundingBoxAscent' in metrics) {\n            return new Size(metrics.width, metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent);\n        }\n        return new Size(metrics.width, 16);\n    }\n    fillStandardText(caption: string, x: number, y: number, font_name?:string, scale?:number) {\n        if(!scale) scale = 1\n        if(font_name && this.fonts.has(font_name)) {\n            let font = this.fonts.get(font_name)\n            if(font) {\n                font.fillText(this.ctx,caption,x,y-StandardTextHeight,scale)\n                return\n            }\n        }\n        this.ctx.fillStyle = StandardTextColor\n        this.ctx.font = StandardTextStyle\n        this.ctx.fillText(caption,x, y)\n    }\n    draw_glyph(codepoint: number, x:number, y:number, font_name: string, fill: string, scale?:number) {\n        if(!scale) scale = 1\n        this.ctx.fillStyle = fill\n        if(font_name && this.fonts.has(font_name)) {\n            let font = this.fonts.get(font_name)\n            if(font) {\n                font.draw_glpyh(this.ctx,codepoint,x,y,scale)\n            }\n        }\n    }\n    private log(...args) {\n        console.log(\"CANVAS: \", ...args)\n    }\n\n    load_jsonfont(basefont_data: any, name:string, ref_name: string) {\n        let fnt = basefont_data.fonts.find(ft => ft.name === name)\n        this.fonts.set(ref_name,new CanvasFont(fnt))\n    }\n\n    set_sprite_scale(scale:number) {\n        this._sprite_scale = scale\n    }\n    set_smooth_sprites(sprite_smoothing:boolean) {\n        this._sprite_smooth = sprite_smoothing\n    }\n    draw_sprite(pt:Point, sprite: Sprite) {\n        if(!sprite) {\n            console.warn(\"sprite missing\")\n            return\n        }\n        this.ctx.imageSmoothingEnabled = this._sprite_smooth\n        this.ctx.drawImage(sprite._img,pt.x,pt.y,sprite._img.width*this._sprite_scale,sprite._img.height*this._sprite_scale)\n    }\n\n    draw_tilemap(tilemap: Tilemap, sheet:Sheet, x: number, y: number, scale: number) {\n        tilemap.forEachPixel((val,i,j) => {\n            if (!val || val === 0) return;\n            // let sheet = this.doc.get_selected_sheet()\n            let tile = sheet.sprites.find((t:Sprite) => t.id ===val);\n            this.ctx.imageSmoothingEnabled = false\n            if(tile) {\n                this.ctx.drawImage(tile._img,x+i*scale,y+j*scale, scale, scale)\n            }\n        })\n\n    }\n\n    public find_by_name(name: string):View|null {\n        return this.find_by_name_view(this._root,name)\n    }\n\n    private find_by_name_view(view: View, name: string):View|null {\n        if (view.name() === name) return view\n        // @ts-ignore\n        if (view.is_parent_view && view.is_parent_view()) {\n            let parent = view as unknown as ParentView;\n            // go in reverse order to the top drawn children are picked first\n            for (let i = parent.get_children().length - 1; i >= 0; i--) {\n                let ch = parent.get_children()[i]\n                let res = this.find_by_name_view(ch,name)\n                if(res) return res\n            }\n        }\n        return null\n    }\n\n    public local_to_view(pt: Point, view: View) {\n        let trans = this.calculate_transform_to(this._root,view)\n        let f = pt.subtract(trans)\n        return f\n    }\n    private calculate_transform_to(root:View,view:View):Point {\n        if(root === view) {\n            return root.position().clone()\n        }\n        // @ts-ignore\n        if (root.is_parent_view && root.is_parent_view()) {\n            let parent = root as unknown as ParentView;\n            for(let i=0; i<parent.get_children().length; i++) {\n                let ch = parent.get_children()[i]\n                let ptx = this.calculate_transform_to(ch,view)\n                if(ptx) {\n                    return ptx.add(root.position())\n                }\n            }\n        }\n        return null\n    }\n\n    public view_to_local(pt: Point, view: View) {\n        let trans = this.calculate_transform_to(this._root,view)\n        return pt.add(trans)\n    }\n\n    private _setup_mouse_input() {\n        this.mouse = new MouseInputService(this)\n        this.canvas.addEventListener('contextmenu',(e)=>{\n            e.preventDefault();\n            return false;\n        })\n        this.canvas.addEventListener('mousedown',(domEvent:MouseEvent)=>{\n            let position = this.screen_to_local(domEvent)\n            this.mouse.trigger_mouse_down(position, domEvent.button)\n            if(this._input_callback) this._input_callback({})\n            domEvent.preventDefault()\n        })\n        this.canvas.addEventListener('mousemove',(domEvent:MouseEvent)=>{\n            let position = this.screen_to_local(domEvent)\n            this.mouse.trigger_mouse_move(position, domEvent.button)\n            if(this._input_callback) this._input_callback({})\n            domEvent.preventDefault()\n        })\n        this.canvas.addEventListener('mouseup',(domEvent:MouseEvent)=>{\n            let position = this.screen_to_local(domEvent)\n            this.mouse.trigger_mouse_up(position, domEvent.button)\n            if(this._input_callback) this._input_callback({})\n            domEvent.preventDefault()\n        })\n        this.canvas.addEventListener('wheel',(domEvent)=>{\n            let position = this.screen_to_local(domEvent)\n            let delta = new Point(domEvent.deltaX, domEvent.deltaY)\n            this.mouse.trigger_scroll(position, delta)\n            if(this._input_callback) this._input_callback({})\n            domEvent.preventDefault()\n        });\n    }\n    private _setup_keyboard_input() {\n        this.keyboard = new KeyboardInputService(this)\n        document.addEventListener('keydown',(e)=>{\n            let modifiers:Modifiers = {\n                alt: e.altKey,\n                ctrl: e.ctrlKey,\n                meta: e.metaKey,\n                shift: e.shiftKey\n            }\n            this.keyboard.trigger_key_down(e.key, e.code, modifiers)\n            if(!e.altKey && !e.metaKey) e.preventDefault()\n        })\n        document.addEventListener('keyup',(e) => {\n            let modifiers:Modifiers = {\n                alt: e.altKey,\n                ctrl: e.ctrlKey,\n                meta: e.metaKey,\n                shift: e.shiftKey\n            }\n            this.keyboard.trigger_key_up(e.key, e.code, modifiers)\n            if(!e.altKey && !e.metaKey) e.preventDefault()\n        })\n    }\n\n    start() {\n        this.addToPage()\n        this._setup_mouse_input();\n        this._setup_keyboard_input()\n        this.repaint()\n    }\n}\n\nclass CanvasFont {\n    private data: any;\n    private metas:Map<number,SpriteGlyph>\n    private scale = 2;\n    constructor(data) {\n        this.data = data\n        this.metas = new Map()\n        this.data.glyphs.forEach(gl => {\n            this.generate_image(gl)\n            this.metas.set(gl.meta.codepoint,gl)\n        })\n    }\n    measureText(text) {\n        let xoff = 0\n        let h = 0\n        for(let i=0; i<text.length; i++) {\n            let cp = text.codePointAt(i)\n            if(this.metas.has(cp)) {\n                let glyph = this.metas.get(cp)\n                let sw = glyph.w - glyph.meta.left - glyph.meta.right\n                xoff += sw + 1\n                h = Math.max(h,glyph.h)\n            } else {\n                xoff += 10\n                h = Math.max(h,10)\n            }\n        }\n        return new Size(xoff*this.scale,h*this.scale)\n    }\n\n    fillText(ctx:CanvasRenderingContext2D, text:string,x:number,y:number, scale?:number) {\n        if(!scale) scale = 1\n        ctx.fillStyle = 'red'\n        let size = this.measureText(text)\n        let xoff = 0\n        let yoff = 2\n        // ctx.fillRect(x+xoff, y+yoff, size.w, size.h)\n        for (let i = 0; i < text.length; i++) {\n            let cp = text.codePointAt(i)\n            let dx = x + xoff*this.scale*scale\n            if (this.metas.has(cp)) {\n                let glyph = this.metas.get(cp)\n                ctx.imageSmoothingEnabled = false\n                //@ts-ignore\n                let img = glyph.img\n                let sx = glyph.meta.left\n                let sy = 0\n                let sw = glyph.w - glyph.meta.left - glyph.meta.right\n                let sh = glyph.h //- glyph.meta.baseline\n                let dy = y + (yoff+glyph.meta.baseline-1)*this.scale*scale\n                let dw = sw*this.scale*scale\n                let dh = sh*this.scale*scale\n                ctx.drawImage(img, sx,sy,sw,sh, dx,dy, dw,dh)\n                xoff += sw + 1\n            } else {\n                //missing the glyph\n                let ew = 8\n                let dy = y + (yoff)*this.scale*scale\n                ctx.strokeRect(dx,dy,ew*this.scale*scale,ew*this.scale*scale)\n                xoff += ew + 1\n\n            }\n        }\n    }\n\n    draw_glpyh(ctx:CanvasRenderingContext2D, cp:number, x:number, y:number, scale?:number) {\n        let xoff = 0\n        let yoff = 2\n        if(this.metas.has(cp)) {\n            let glyph = this.metas.get(cp)\n            ctx.imageSmoothingEnabled = false\n            //@ts-ignore\n            let img = glyph.img\n            let sx = glyph.meta.left\n            let sy = 0\n            let sw = glyph.w - glyph.meta.left - glyph.meta.right\n            let sh = glyph.h //- glyph.meta.baseline\n            let dx = x + xoff*this.scale*scale\n            let dy = y + (yoff+glyph.meta.baseline-1)*this.scale*scale\n            let dw = sw*this.scale*scale\n            let dh = sh*this.scale*scale\n            ctx.drawImage(img, sx,sy,sw,sh, dx,dy, dw,dh)\n        }\n    }\n\n    private generate_image(gl) {\n        gl.img = document.createElement('canvas')\n        gl.img.width = gl.w\n        gl.img.height = gl.h\n        let c = gl.img.getContext('2d')\n        c.fillStyle = 'green'\n        c.fillRect(0,0,gl.img.width,gl.img.height)\n        for (let j = 0; j < gl.h; j++) {\n            for (let i = 0; i < gl.w; i++) {\n                let n = j * gl.w + i;\n                let v = gl.data[n];\n                if(v %2 === 0) {\n                    c.fillStyle = 'white'\n                    // c.fillRect(i, j, 1, 1)\n                    c.clearRect(i,j,1,1)\n                }\n                if(v%2 === 1) {\n                    c.fillStyle = 'black'\n                    c.fillRect(i, j, 1, 1)\n                }\n            }\n        }\n    }\n}\n","export const ButtonBackgroundColor_active = '#a3e3ff';\nexport const ButtonBackgroundColor_selected = '#36baec';\nexport const ButtonBackgroundColor = '#e3e3e0';\nexport const ButtonBorderColor = '#949492';\nexport const StandardSelectionColor = ButtonBackgroundColor_active\nexport const StandardTextColor = '#444'\nexport const StandardTextStyle  = '16px sans-serif'\nexport const StandardTextHeight = 20\nexport const StandardVerticalMargin = 10\nexport const StandardLeftPadding = 5\nexport const StandardPanelBackgroundColor = '#f0f0f0'\n\n","import {gen_id} from \"./core\";\n\nexport interface Palette {\n    get_color_palette(): string[];\n}\nexport class Sprite {\n    id: string\n    name:string\n    w: number\n    h: number\n    data: number[]\n    _img: HTMLCanvasElement\n    private palette: Palette;\n\n    constructor(id:string, name:string, w:number, h:number, palette:Palette) {\n        this.id = id || gen_id('unknown');\n        this.name = name || 'unknown'\n        this.w = w;\n        this.h = h;\n        this.data = []\n        for (let i = 0; i < this.w * this.h; i++) {\n            this.data[i] = 0;\n        }\n        this._img = document.createElement('canvas')\n        this._img.width = this.w\n        this._img.height = this.h\n        this.palette = palette\n    }\n\n    forEachPixel(cb: (val: any, i: number, j: number) => void) {\n        for (let j = 0; j < this.h; j++) {\n            for (let i = 0; i < this.w; i++) {\n                let n = j * this.w + i;\n                let v = this.data[n];\n                cb(v, i, j);\n            }\n        }\n    }\n\n    set_pixel(x: number, y: number, color: any) {\n        let n = y * this.w + x;\n        this.data[n] = color;\n        this.sync()\n    }\n    sync() {\n        // console.log(\"syncing a sprite\")\n        let c = this._img.getContext('2d')\n        let pal = this.palette.get_color_palette()\n        c.clearRect(0,0,this._img.width, this._img.height)\n        this.forEachPixel((v,i,j)=>{\n            c.fillStyle = pal[v]\n            c.fillRect(i, j, 1, 1)\n        })\n    }\n\n    get_pixel(x: number, y: number):any {\n        let n = y * this.w + x;\n        return this.data[n]\n    }\n\n    toJsonObj():object {\n        return {\n            clazz:'Sprite',\n            id:this.id,\n            name:this.name,\n            w:this.w,\n            h:this.h,\n            data:this.data,\n        }\n    }\n}\nexport class Sheet {\n    sprites: Sprite[];\n    private id: string;\n    name: string;\n    constructor(id:string, name:string) {\n        this.id = id || gen_id('unknown');\n        this.name = name || 'unknown'\n        this.sprites = []\n    }\n    add(sprite: Sprite) {\n        this.sprites.push(sprite)\n    }\n\n    toJsonObj() {\n        return {\n            clazz:'Sheet',\n            id:this.id,\n            name:this.name,\n            sprites: this.sprites.map(sp => sp.toJsonObj())\n        }\n    }\n}\nexport class Tilemap {\n    id:string\n    name: string\n    w: number\n    h: number\n    data: number[];\n\n    constructor(id, name, w, h) {\n        this.id = id || gen_id('unknown');\n        this.name = name || 'unknown'\n        this.w = w;\n        this.h = h;\n        this.data = []\n        for (let i = 0; i < this.w * this.h; i++) {\n            this.data[i] = 0;\n        }\n    }\n\n    forEachPixel(cb: (val: any, i: number, j: number) => void) {\n        for (let j = 0; j < this.h; j++) {\n            for (let i = 0; i < this.w; i++) {\n                let n = j * this.w + i;\n                let v = this.data[n];\n                cb(v, i, j);\n            }\n        }\n    }\n    expand_width(number: number) {\n        let new_tm = new Tilemap(\"temp\",\"temp\",this.w+number,this.h);\n        this.forEachPixel((val, i, j) => {\n            new_tm.set_pixel(i,j,val)\n        })\n        this.data = new_tm.data\n        this.w = new_tm.w\n        this.h = new_tm.h\n    }\n\n    set_pixel(x: number, y: number, color: any) {\n        let n = y * this.w + x;\n        this.data[n] = color;\n    }\n    get_pixel(x: number, y: number):any {\n        let n = y * this.w + x;\n        return this.data[n]\n    }\n\n    toJsonObj() {\n        return {\n            clazz:'Tilemap',\n            id:this.id,\n            name:this.name,\n            w:this.w,\n            h:this.h,\n            data:this.data,\n        }\n    }\n\n\n}\ntype GlyphMeta = {\n    codepoint:number\n    left:number,\n    right:number,\n    baseline:number,\n}\nexport class SpriteGlyph extends Sprite {\n    meta: GlyphMeta;\n    constructor(id,name,w,h, palette) {\n        super(id,name,w,h, palette)\n        this.meta = {\n            codepoint:300,\n            left:0,\n            right:0,\n            baseline:0\n        }\n    }\n    override sync() {\n        // console.log(\"syncing SpriteGlyph\")\n        let c = this._img.getContext('2d')\n        this.forEachPixel((v,i,j)=>{\n            if(v %2 === 0) {\n                c.fillStyle = 'white'\n                c.fillRect(i, j, 1, 1)\n            }\n            if(v%2 === 1) {\n                c.fillStyle = 'black'\n                c.fillRect(i, j, 1, 1)\n            }\n        })\n    }\n    toJsonObj():object {\n        let obj = super.toJsonObj()\n        // @ts-ignore\n        obj.clazz = 'Glyph'\n        // @ts-ignore\n        obj.meta = this.meta\n        // @ts-ignore\n        // console.log(\"saving out\",obj.meta)\n        return obj\n    }\n}\nexport class SpriteFont {\n    glyphs:SpriteGlyph[]\n    id: string;\n    name: string;\n    // private _selected_glyph_index: number;\n    constructor(id,name) {\n        this.id = id || gen_id('unknown');\n        this.name = name || 'unknown'\n        this.glyphs = []\n        // this._selected_glyph_index = 0\n    }\n    toJsonObj() {\n        return {\n            clazz:'Font',\n            id:this.id,\n            name:this.name,\n            glyphs: this.glyphs.map(sp => sp.toJsonObj())\n        }\n    }\n\n    add(spriteGlyph: SpriteGlyph) {\n        this.glyphs.push(spriteGlyph)\n    }\n\n    // set_selected_glyph_index(val: number) {\n    //     this._selected_glyph_index = val\n    // }\n    // selected_glyph_index():number {\n    //     return this._selected_glyph_index\n    // }\n    // get_selected_glyph():SpriteGlyph {\n    //     return this.glyphs[this._selected_glyph_index]\n    // }\n    // set_selected_glyph(target: SpriteGlyph) {\n    //     this._selected_glyph_index = this.glyphs.indexOf(target)\n    // }\n}\n\nconst GRAYSCALE_PALETTE = [\n    '#ff00ff',\n    '#f0f0f0',\n    '#d0d0d0',\n    '#909090',\n    '#404040',\n];\n\n\nfunction obj_to_class(sh, doc:AssetsDoc) {\n    if(sh.clazz === 'Sprite') {\n        console.log(\"making a sprite\",sh.id,sh.name)\n        let sprite = new Sprite(sh.id, sh.name, sh.w, sh.h, doc)\n        sprite.data = sh.data\n        sprite.sync()\n        console.log(\"called sync\")\n        return sprite\n    }\n    if(sh.clazz === 'Tilemap') {\n        let tilemap = new Tilemap(sh.id, sh.name, sh.w, sh.h)\n        tilemap.data = sh.data\n        return tilemap\n    }\n    if(sh.clazz === 'Sheet') {\n        console.log(\"making a sheet\",sh.id,sh.name)\n        let sheet = new Sheet(sh.id,sh.name)\n        sheet.sprites = sh.sprites.map(sp => obj_to_class(sp, doc))\n        return sheet\n    }\n    if(sh.clazz === 'Font') {\n        let font = new SpriteFont(sh.id,sh.name)\n        font.glyphs = sh.glyphs.map(g => obj_to_class(g, doc))\n        return font\n    }\n    if(sh.clazz === 'Glyph') {\n        let glyph = new SpriteGlyph(sh.id,sh.name,sh.w,sh.h, doc)\n        glyph.data = sh.data\n        glyph.meta = sh.meta\n        if(!glyph.meta.left) glyph.meta.left = 0\n        if(!glyph.meta.right) glyph.meta.right = 0\n        if(!glyph.meta.baseline) glyph.meta.baseline = 0\n        glyph.sync()\n        return glyph\n    }\n    throw new Error(`don't know how to deserialize ${sh.clazz}`)\n}\n\nexport interface AssetsDoc extends Palette {\n    find_sheet(name:String):Sheet\n    find_sprite(sheet_name:String, sprite_name:String):Sprite\n}\n\nclass AssetsDocImpl implements AssetsDoc {\n    _color_palette: string[]\n    sheets: Sheet[]\n    fonts: SpriteFont[]\n    maps:Tilemap[]\n\n    constructor() {\n        this.sheets = []\n        this.fonts = []\n        this.maps = []\n    }\n    get_color_palette(): string[] {\n        return this._color_palette\n    }\n\n    find_sheet(name: String): Sheet {\n        return this.sheets.find(sh => sh.name === name)\n    }\n\n    find_sprite(sheet_name: String, sprite_name: String): Sprite {\n        let sheet = this.find_sheet(sheet_name)\n        return sheet.sprites.find(sp => sp.name === sprite_name)\n    }\n}\n\nexport function load_assets_from_json(data:any):AssetsDoc {\n    if(data.version === 1) {\n        if(data.fonts && data.fonts.length > 0) {\n            console.log(\"pretending to upgrade the document\")\n            data.version = 2\n        } else {\n            console.log(\"really upgrade\")\n            data.maps.forEach(mp => {\n                console.log(\"converting\",mp)\n                mp.clazz = 'Tilemap'\n                if(!mp.id) mp.id = gen_id(\"tilemap\")\n                if(!mp.name) mp.name = gen_id(\"unknown\")\n                return mp\n            })\n            data.version = 2\n        }\n    }\n    if(data.version === 2) {\n        data.color_palette = GRAYSCALE_PALETTE\n        data.version = 3\n    }\n    if(data.version !== 3) throw new Error(\"we can only parse version 3 json\")\n    if(data.name) this._name = data.name\n    let obj = new AssetsDocImpl()\n    obj._color_palette = data.color_palette\n    obj.sheets = data.sheets.map(sh => obj_to_class(sh,obj))\n    obj.fonts = data.fonts.map(fnt => obj_to_class(fnt, obj))\n    obj.maps = data.maps.map(mp => obj_to_class(mp, obj))\n    return obj\n}\n","import {SurfaceContext} from \"./canvas\";\nimport {\n    ButtonBackgroundColor,\n    ButtonBackgroundColor_active,\n    ButtonBackgroundColor_selected,\n    ButtonBorderColor,\n    StandardLeftPadding,\n    StandardSelectionColor,\n    StandardTextColor,\n    StandardTextHeight,\n    StandardTextStyle\n} from \"./style\";\nimport {\n    Action,\n    BaseView,\n    Callback,\n    COMMAND_ACTION,\n    COMMAND_CHANGE,\n    CommandEvent,\n    CoolEvent,\n    FOCUS_CATEGORY,\n    gen_id,\n    KEYBOARD_DOWN, KeyboardEvent,\n    Point,\n    POINTER_CATEGORY,\n    POINTER_DOWN,\n    POINTER_UP,\n    PointerEvent, Rect,\n    Size\n} from \"./core\";\nimport {HBox, PopupContainer, VBox} from \"./containers\";\n\nexport class Label extends BaseView {\n    protected _caption: string\n\n    constructor(caption?: string) {\n        super(gen_id(\"label\"))\n        this._name = 'label'\n        this._caption = caption || \"no caption\"\n    }\n    caption():string {\n        return this._caption\n    }\n    set_caption(caption:string) {\n        this._caption = caption\n    }\n\n    draw(g: SurfaceContext): void {\n        g.fillStandardText(this._caption, StandardLeftPadding, StandardTextHeight,'base');\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        this.set_size(g.measureText(this._caption,'base').grow(StandardLeftPadding))\n        return this.size()\n    }\n}\n\nexport class CustomLabel extends Label {\n    private cb: Callback;\n    constructor(text:string,cb:Callback) {\n        super(text);\n        this.cb = cb\n    }\n    override draw(ctx: SurfaceContext) {\n        this._caption = this.cb({})\n        super.draw(ctx);\n    }\n}\nexport class ActionButton extends BaseView {\n    protected caption: string\n    private active: boolean\n    constructor(props?:any) {\n        super(gen_id(\"button2\"))\n        this._name = 'button2'\n        this.caption = 'no caption'\n        if(props && props.caption) this.caption = props.caption\n        this.active = false\n    }\n    set_caption(caption:string) {\n        this.caption = caption\n    }\n    draw(g: SurfaceContext): void {\n        if(this.active) {\n            g.fillBackgroundSize(this.size(), ButtonBackgroundColor_active)\n        } else {\n            g.fillBackgroundSize(this.size(), ButtonBackgroundColor)\n        }\n        g.strokeBackgroundSize(this.size(), ButtonBorderColor)\n        g.fillStandardText(this.caption, StandardLeftPadding, StandardTextHeight, 'base');\n    }\n    input(event:CoolEvent) {\n        if(event.category !== POINTER_CATEGORY) return\n        if(event.type === POINTER_DOWN) {\n            this.active = true\n        }\n        if(event.type === POINTER_UP) {\n            this.active = false\n            let ae = new CommandEvent(event.ctx, COMMAND_ACTION, this)\n            this.fire(ae.type, ae)\n        }\n    }\n    layout(g: SurfaceContext, available: Size): Size {\n        this.set_size(g.measureText(this.caption,'base').grow(StandardLeftPadding))\n        return this.size()\n    }\n}\n\nexport abstract class BaseSelectButton extends BaseView {\n    _caption: string\n    _selected:boolean\n    _active:boolean\n    selected_icon: number;\n    icon: number;\n    constructor() {\n        super(gen_id(\"base-button\"))\n        this._caption = 'no caption'\n        this._selected = false;\n        this.icon = -1\n        this.selected_icon = -1\n        this._active = false\n    }\n    selected():boolean {\n        return this._selected\n    }\n    set_selected(sel:boolean) {\n        this._selected = sel\n    }\n    caption() {\n        return this._caption\n    }\n    set_caption(caption:string) {\n        this._caption = caption\n    }\n    draw(g: SurfaceContext) {\n        let x = StandardLeftPadding\n        let y = StandardLeftPadding\n        if(this.has_icon()) {\n            g.draw_glyph(this._selected ? this.selected_icon : this.icon, x, y, 'base', 'black')\n            x += 16 // glyph width\n            x += StandardLeftPadding // space between text and glyph\n        }\n        g.fillStandardText(this._caption, x, y+StandardTextHeight-2, 'base')\n    }\n    input(event: CoolEvent): void {\n        if (event.type === POINTER_DOWN) {\n            this._active = true\n        }\n        if (event.type === POINTER_UP) {\n            this._active = false\n            this._selected = !this._selected\n            let ae = new CommandEvent(event.ctx, COMMAND_CHANGE, this)\n            this.fire(ae.type, ae)\n        }\n    }\n    layout(g: SurfaceContext, available: Size): Size {\n        let size = g.measureText(this._caption,'base').grow(StandardLeftPadding)\n        if(this.has_icon()) {\n            size.w += 16\n        }\n        size.w += StandardLeftPadding // gap between icon and texst\n        this.set_size(size)\n        return size\n    }\n\n    private has_icon():boolean{\n        return this.icon !== -1\n    }\n}\nexport class ToggleButton extends BaseSelectButton {\n    // private active: boolean\n    constructor(caption?: string) {\n        super()\n        if(caption)this.set_caption(caption)\n    }\n    draw(ctx: SurfaceContext) {\n        let bg = ButtonBackgroundColor\n        if(this.selected()) {\n            bg = ButtonBackgroundColor_selected\n        }\n        if(this._active) {\n            bg = ButtonBackgroundColor_active\n        }\n        ctx.fillBackgroundSize(this.size(), bg)\n        ctx.strokeBackgroundSize(this.size(),ButtonBorderColor)\n        super.draw(ctx)\n    }\n    // let ae = new CommandEvent(event.ctx, COMMAND_ACTION, this)\n}\n\nexport class CheckButton extends BaseSelectButton {\n    constructor() {\n        super();\n        this.icon = 800\n        this.selected_icon = 801\n    }\n}\nexport class RadioButton extends BaseSelectButton {\n    constructor() {\n        super();\n        this.icon = 802\n        this.selected_icon = 803\n    }\n}\nexport class IconButton extends BaseView {\n    private active: boolean\n    private _icon:number\n    constructor() {\n        super(gen_id(\"glyph-button\"))\n        this._name = 'glyph-button'\n        this.active = false\n        this._icon = 0\n    }\n    draw(g: SurfaceContext): void {\n        if(this.active) {\n            g.fillBackgroundSize(this.size(), ButtonBackgroundColor_active)\n        } else {\n            g.fillBackgroundSize(this.size(), ButtonBackgroundColor)\n        }\n        g.strokeBackgroundSize(this.size(), ButtonBorderColor)\n        if(this._icon !== 0) {\n            let x = StandardLeftPadding\n            let y = StandardLeftPadding\n            g.draw_glyph(this._icon,x,y,'base','black')\n        }\n    }\n    input(event:CoolEvent) {\n        if(event.category !== POINTER_CATEGORY) return\n        if(event.type === POINTER_DOWN) {\n            this.active = true\n        }\n        if(event.type === POINTER_UP) {\n            this.active = false\n            let ae = new CommandEvent(event.ctx, COMMAND_ACTION, this)\n            this.fire(ae.type, ae)\n        }\n    }\n    layout(g: SurfaceContext, available: Size): Size {\n        this.set_size(new Size(16,16).grow(StandardLeftPadding))\n        return this.size()\n    }\n\n    icon():number {\n        return this._icon\n    }\n    set_icon(icon: number) {\n        this._icon = icon\n    }\n}\n\nexport class SelectList extends BaseView {\n    private data: any[];\n    private renderer: any;\n    private selected_index: number;\n\n    constructor(data:any[], renderer) {\n        super('tree')\n        this.data = data\n        this.renderer = renderer\n        this.selected_index = -1\n        this._vflex = true\n    }\n    draw(g: SurfaceContext): void {\n        g.fillBackgroundSize(this.size(),'#ddd')\n        this.data.forEach((item,i) => {\n            if (i === this.selected_index) {\n                g.fill(new Rect(0,30*i,this.size().w,25), StandardSelectionColor)\n            }\n            let str = this.renderer(item)\n            g.fillStandardText(str,StandardLeftPadding,i*30 + 20, 'base')\n        })\n    }\n    input(event:CoolEvent) {\n        if(event.category !== POINTER_CATEGORY) return\n        if(event.type === POINTER_DOWN) {\n            let evt = event as PointerEvent\n            let pt = evt.position\n            let y = Math.floor(pt.y / 30)\n            let item = this.data[y]\n            this.selected_index = y\n            this.fire('change',{item:item,y:y})\n        }\n    }\n    set_data(data: any[]) {\n        this.data = data\n    }\n    layout(g: SurfaceContext, available: Size): Size {\n        if(this.hflex()) {\n            this.set_size(new Size(available.w, available.h))\n        } else {\n            this.set_size(new Size(200, available.h))\n        }\n        return this.size()\n    }\n}\n\nexport class Header extends BaseView {\n    private _caption: string\n    private fill: string;\n\n    constructor(caption?: string) {\n        super(gen_id(\"header\"))\n        this._name = 'header'\n        this.fill = 'white'\n        this._caption = caption || \"no caption\"\n        this._hflex = true\n    }\n    caption():string {\n        return this._caption\n    }\n    set_caption(caption:string) {\n        this._caption = caption\n    }\n    draw(g: SurfaceContext): void {\n        g.fillBackgroundSize(this.size(),this.fill)\n        let size = g.measureText(this._caption,'base')\n        let x = (this.size().w - size.w) / 2\n        g.fillStandardText(this._caption, x, StandardTextHeight,'base');\n    }\n    layout(g: SurfaceContext, available: Size): Size {\n        let text_size = g.measureText(this._caption,'base').grow(StandardLeftPadding)\n        this.set_size(new Size(available.w, text_size.h))\n        return this.size()\n    }\n}\n\nexport class HSpacer extends BaseView {\n    constructor() {\n        super(\"h-spacer\");\n        this._hflex = true\n        this._name = 'h-spacer'\n    }\n    layout(g: SurfaceContext, available: Size): Size {\n        this.set_size(new Size(available.w, 0))\n        return this.size()\n    }\n    draw(g: SurfaceContext) {\n    }\n}\n\nexport class FontIcon extends BaseView {\n    private codepoint: number\n\n    constructor(codepoint: number) {\n        super(gen_id('fonticon'))\n        this.codepoint = codepoint\n    }\n\n    draw(g: SurfaceContext): void {\n        g.draw_glyph(this.codepoint, 0, 0, 'base', 'black')\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        this.set_size(new Size(16, 16))\n        return this.size()\n    }\n}\n\n\nexport class DropdownButton extends ActionButton {\n    actions: Action[]\n    constructor() {\n        super();\n        this.actions = []\n        this.on('action', (e) => {\n            let popup = new PopupContainer();\n            let popup_box = new VBox()\n            popup_box.set_vflex(false)\n            this.actions.forEach(act => {\n                let button = new ActionButton(act.caption)\n                button.set_caption(act.caption)\n                button.on('action', () => {\n                    // @ts-ignore\n                    act.fun();\n                    popup.hide()\n                })\n                popup_box.add(button)\n            })\n            popup.add(popup_box)\n            let popup_layer = e.ctx.find_by_name('popup-layer')\n            popup_layer.add(popup)\n            let off = e.ctx.view_to_local(new Point(0, 0), this)\n            popup.open_at(off.add(new Point(0, this.size().h)));\n        })\n    }\n    set_actions(actions: Action[]) {\n        this.actions = actions\n    }\n}\n\nexport class TextLine extends BaseView {\n    text: string;\n    private cursor: number;\n    private pref_width: number;\n\n    constructor() {\n        super(gen_id(\"text-line\"));\n        this._name = '@text-line'\n        this.text = \"abc\"\n        this.pref_width = 100\n        this.cursor = this.text.length\n    }\n\n    draw(g: SurfaceContext): void {\n        let bg = '#ddd'\n        if (g.is_keyboard_focus(this)) bg = 'white'\n        g.fillBackgroundSize(this.size(), bg)\n        g.strokeBackgroundSize(this.size(), 'black')\n        if (g.is_keyboard_focus(this)) {\n            // @ts-ignore\n            g.ctx.fillStyle = StandardTextColor\n            // @ts-ignore\n            g.ctx.font = StandardTextStyle\n            let parts = this._parts()\n            let bx = 5\n            let ax = bx + g.measureText(parts.before, 'base').w\n            g.fillStandardText(parts.before, bx, 20, 'base')\n            g.fillStandardText(parts.after, ax, 20, 'base')\n            // @ts-ignore\n            g.ctx.fillStyle = 'black'\n            // @ts-ignore\n            g.ctx.fillRect(ax, 2, 2, 20)\n        } else {\n            g.fillStandardText(this.text, 5, 20, 'base');\n        }\n    }\n\n    input(event: CoolEvent) {\n        if (event.category === FOCUS_CATEGORY) {\n            // this.log(\"got keyboard focus change\",event.category)\n        }\n        if (event.type === POINTER_DOWN) {\n            event.ctx.set_keyboard_focus(this)\n        }\n        if (event.type === KEYBOARD_DOWN) {\n            let e = event as KeyboardEvent\n            if (e.code === 'KeyD' && e.modifiers.ctrl) return this.delete_right()\n            if (e.code === 'Backspace') return this.delete_left()\n            if (e.code === 'ArrowLeft') return this.cursor_left()\n            if (e.code === 'ArrowRight') return this.cursor_right()\n            if (e.code === 'Enter') {\n                event.ctx.release_keyboard_focus(this)\n                this.fire('action', this.text)\n                return\n            }\n            if (e.key && e.key.length === 1) this.insert(e.key)\n        }\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        this.set_size(new Size(this.pref_width, 26))\n        if (this._hflex) {\n            this.size().w = available.w\n        }\n        return this.size()\n    }\n\n    private insert(key: string) {\n        let parts = this._parts()\n        this.text = `${parts.before}${key}${parts.after}`\n        this.cursor_right()\n        this.fire('change',this.text)\n    }\n\n    private delete_left() {\n        let parts = this._parts()\n        this.text = `${parts.before.slice(0, parts.before.length - 1)}${parts.after}`\n        this.cursor_left()\n        this.fire('change',this.text)\n    }\n\n    private delete_right() {\n        let parts = this._parts()\n        this.text = `${parts.before}${parts.after.slice(1)}`\n        this.fire('change',this.text)\n    }\n\n    private cursor_left() {\n        this.cursor -= 1\n        if (this.cursor < 0) this.cursor = 0\n    }\n\n    private cursor_right() {\n        this.cursor += 1\n        if (this.cursor > this.text.length) this.cursor = this.text.length\n    }\n\n    private _parts() {\n        return {\n            before: this.text.slice(0, this.cursor),\n            after: this.text.slice(this.cursor),\n        }\n    }\n\n    set_text(name: string) {\n        this.text = name\n        this.cursor = this.text.length\n        this.fire('change',this.text)\n    }\n\n    set_pref_width(w: number) {\n        this.pref_width = w\n    }\n}\n\nexport class NumberTextLine extends HBox {\n    private _value:number\n    private text_line: TextLine;\n    private up_button: IconButton;\n    private down_button: IconButton;\n    constructor() {\n        super()\n        this.pad = 1\n        this._value = 0\n        this.text_line = new TextLine()\n        this.add(this.text_line)\n        this.text_line.on('change',() => {\n            let v = parseInt(this.text_line.text,10);\n            if(Number.isInteger(v)) {\n                this._value = v\n            } else {\n                this.log(\"invalid!\")\n            }\n        })\n        this.up_button = new IconButton()\n        this.up_button.set_icon(8593)\n        this.up_button.on('action',() => {\n            this.set_value(this.value()+1)\n        })\n        this.down_button = new IconButton()\n        this.down_button.set_icon(8595)\n        this.down_button.on('action',() => {\n            this.set_value(this.value()-1)\n        })\n        this.add(this.up_button)\n        this.add(this.down_button)\n    }\n    override draw(g):void {\n        super.draw(g)\n        if(!this.is_valid()) {\n            g.strokeBackgroundSize(this.size(),'red')\n        }\n    }\n\n    public set_value(value:number) {\n        this._value = value\n        this.text_line.set_text(''+value)\n    }\n\n    private is_valid() {\n        let v = parseInt(this.text_line.text)\n        return Number.isInteger(v)\n    }\n\n    value():number {\n        return this._value\n    }\n}","import {\n    BaseParentView,\n    BaseView,\n    CoolEvent,\n    gen_id,\n    KEYBOARD_CATEGORY,\n    KeyboardEvent,\n    Point,\n    POINTER_CATEGORY,\n    POINTER_DOWN,\n    POINTER_DRAG,\n    PointerEvent,\n    Rect,\n    SCROLL_EVENT,\n    ScrollEvent,\n    Size,\n    View\n} from \"./core\";\nimport {SurfaceContext} from \"./canvas\";\nimport {ActionButton} from \"./components\";\n\nexport class LayerView extends BaseParentView {\n    _type: string\n\n    constructor(name?: string) {\n        super(gen_id('layer'))\n        this._type = 'layer-view'\n        if (name) {\n            this._name = name\n        }\n    }\n\n    draw(g: SurfaceContext): void {\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        this._children.forEach(ch => ch.layout(g, available))\n        this.set_size(available)\n        return available\n    }\n\n    set_visible(visible: boolean) {\n        this._visible = visible\n    }\n}\n\nexport type VAlign = \"top\" | \"center\" | \"bottom\" | \"stretch\"\n\nexport class HBox extends BaseParentView {\n    private _fill: string;\n    pad: number;\n    private _valign: VAlign;\n\n    constructor() {\n        super(gen_id('hbox'));\n        this._valign = 'top'\n        this.pad = 0\n        this._fill = null\n    }\n\n    set_fill(fill: string) {\n        this._fill = fill\n    }\n\n    set_valign(valign: VAlign) {\n        this._valign = valign\n    }\n\n    layout(g: SurfaceContext, real_available: Size): Size {\n        let available = real_available.shrink(this.pad);\n        //split out flex and non-flex children\n        let yes_flex = this._children.filter(ch => ch.hflex())\n        let non_flex = this._children.filter(ch => !ch.hflex())\n        //call layout on the non-flex children first\n        let total_w = 0\n        let leftover_w = available.w\n        non_flex.map((ch: View) => {\n            let size = ch.layout(g, new Size(leftover_w, available.h))\n            total_w += size.w\n            leftover_w -= size.w\n        })\n        if (yes_flex.length > 0) {\n            //allocate the rest of the space equally to the flex children\n            let flex_avail = new Size((available.w - total_w) / yes_flex.length, available.h)\n            //call layout on the flex children\n            yes_flex.map((ch: View) => {\n                let size = ch.layout(g, flex_avail)\n                total_w += size.w\n            })\n        }\n        let maxh = 0\n        //find the max height\n        this.get_children().forEach(ch => maxh = Math.max(ch.size().h, maxh))\n        let nx = this.pad\n        let ny = this.pad\n        //place all children (they've already set their width and height)\n        this._children.forEach(ch => {\n            if (this._valign === 'top') ch.set_position(new Point(nx, ny))\n            if (this._valign === 'center') ch.set_position(new Point(nx, (maxh - ch.size().h) / 2))\n            if (this._valign === 'bottom') ch.set_position(new Point(nx, maxh - ch.size().h))\n            if (this._valign === 'stretch') {\n                ch.set_position(new Point(nx, ny))\n                ch.size().h = maxh\n            }\n            nx += ch.size().w\n        })\n        //return own size\n        this.set_size(new Size(nx + this.pad * 2, maxh + this.pad * 2))\n        if (this.vflex()) this.size().h = real_available.h\n        if (this.hflex()) this.size().w = real_available.w\n        return this.size()\n    }\n\n    draw(g: SurfaceContext) {\n        if (this._fill) g.fillBackgroundSize(this.size(), this._fill)\n    }\n}\n\nexport type HAlign = \"left\" | \"center\" | \"right\" | \"stretch\"\n\nexport class VBox extends BaseParentView {\n    private _fill: string;\n    pad: number;\n    halign: HAlign;\n\n    constructor() {\n        super(gen_id('vbox'));\n        this._fill = null\n        this.halign = \"left\"\n        this.pad = 0\n    }\n\n    fill(): string {\n        return this._fill\n    }\n\n    set_fill(fill: string) {\n        this._fill = fill\n    }\n\n    layout(g: SurfaceContext, real_available: Size): Size {\n        let available = real_available.shrink(this.pad);\n\n        let yes_flex = this.get_children().filter(ch => ch.vflex())\n        let non_flex = this.get_children().filter(ch => !ch.vflex())\n        //call layout on the non-flex children first\n        let total_h = 0\n        let leftover_h = available.h\n        non_flex.map(ch => {\n            let size = ch.layout(g, new Size(available.w, leftover_h))\n            total_h += size.h\n            leftover_h -= size.h\n        })\n        if (yes_flex.length > 0) {\n            //allocate the rest of the space equally to the flex children\n            let flex_avail = new Size(available.w, (available.h - total_h) / yes_flex.length)\n            //call layout on the flex children\n            yes_flex.map((ch: View) => {\n                let size = ch.layout(g, flex_avail)\n                total_h += size.h\n            })\n        }\n        //place all children (they've already set their width and height)\n        let nx = this.pad\n        let ny = this.pad\n        let maxw = 0\n        this.get_children().forEach(ch => maxw = Math.max(ch.size().w, maxw))\n        this.get_children().forEach(ch => {\n            if (this.halign === 'left') ch.set_position(new Point(nx, ny))\n            if (this.halign === 'center') ch.set_position(new Point((maxw - ch.size().w) / 2, ny))\n            if (this.halign === 'right') ch.set_position(new Point(maxw - ch.size().w, ny))\n            if (this.halign === 'stretch') {\n                ch.set_position(new Point(nx, ny))\n                ch.size().w = maxw\n            }\n            ny += ch.size().h\n        })\n        //return own size\n        this.size().w = maxw + this.pad * 2\n        this.size().h = ny + this.pad * 2\n        if (this.hflex()) {\n            this.size().w = available.w\n        }\n        if (this.vflex()) {\n            this.size().h = available.h\n        }\n        return this.size()\n    }\n\n    draw(g: SurfaceContext) {\n        if (this._fill) g.fillBackgroundSize(this.size(), this._fill)\n    }\n\n    clear_children() {\n        this._children = []\n    }\n}\n\nexport class GrowPanel extends BaseParentView {\n    private fill: string\n\n    constructor() {\n        super(gen_id('grow'));\n        this.fill = null\n        this._hflex = true\n        this._vflex = true\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        this.set_size(available)\n        return this.size()\n    }\n\n    draw(g: SurfaceContext) {\n        if (this.fill) g.fillBackgroundSize(this.size(), this.fill)\n    }\n\n    set_fill(fill: string) {\n        this.fill = fill\n    }\n    with_fill(fill: string) {\n        this.fill = fill\n        return this\n    }\n}\n\nclass ScrollWrapper extends BaseParentView {\n    xoff: number\n    yoff: number\n\n    constructor() {\n        super(\"scroll-wrapper\");\n        this.xoff = 0\n        this.yoff = 0\n        this._name = 'scroll-wrapper'\n    }\n\n    clip_children(): boolean {\n        return true\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        if (this.yoff > 0) this.yoff = 0\n        if (this.xoff > 0) this.xoff = 0\n        this.set_size(available)\n\n        this.get_children().forEach(ch => {\n            let size = ch.layout(g, available)\n            if (size.w + this.xoff < available.w) {\n                this.xoff = available.w - size.w\n            }\n            if (size.h + this.yoff < available.h) {\n                this.yoff = available.h - size.h\n            }\n            if (size.w < available.w) {\n                this.xoff = (available.w - size.w) / 2\n            }\n            if (size.h < available.h) {\n                this.yoff = (available.h - size.h) / 2\n            }\n            ch.set_position(new Point(this.xoff, this.yoff))\n        })\n        return available\n    }\n\n    input(event: CoolEvent) {\n        if (event.type === SCROLL_EVENT && event.direction === \"up\") {\n            let e = event as ScrollEvent\n            this.xoff -= e.delta.x\n            this.yoff -= e.delta.y\n            e.stopped = true\n            e.ctx.repaint()\n        }\n    }\n\n}\n\nclass ScrollBar extends BaseView {\n    private vert: boolean;\n    private wrapper: ScrollWrapper;\n\n    constructor(vert: boolean, wrapper: ScrollWrapper) {\n        super(gen_id(\"scroll-bar\"));\n        this.wrapper = wrapper\n        this.vert = vert\n        if (this.vert) {\n            this.set_size(new Size(20, 100))\n        } else {\n            this.set_size(new Size(100, 20))\n        }\n    }\n\n    draw(g: SurfaceContext): void {\n        //draw the gutter\n        g.fillBackgroundSize(this.size(), '#888')\n        //draw the thumb\n        if (this.wrapper.get_children().length == 1) {\n            let viewport_size = this.wrapper.size()\n            let content_size = this.wrapper.get_children()[0].size()\n            // this.log(\"content\",content,'vs',wsize)\n            if (this.vert) {\n                let gutter_length = this.size().h - 40\n                let fract = viewport_size.h / content_size.h\n                let s = gutter_length * fract\n                let thumb_off = this.wrapper.yoff * fract\n                g.fill(new Rect(0, 20 - thumb_off, 20, s), '#ccc');\n            } else {\n                let gutter_length = this.size().w - 50\n                let fract = viewport_size.w / content_size.w\n                let s = gutter_length * fract\n                let thumb_off = this.wrapper.xoff * fract\n                g.fill(new Rect(20 - thumb_off, 0, s, 20), '#ccc');\n            }\n        }\n        //draw the arrows\n        if (this.vert) {\n            g.fill(new Rect(0, 0, 20, 20), '#999')\n            g.draw_glyph(8593, 0, 0, 'base', 'black', 1)\n            g.fill(new Rect(0, this.size().h - 20, 20, 20), '#999')\n            g.draw_glyph(8595, 0, this.size().h - 20, 'base', 'black', 1)\n        } else {\n            g.fill(new Rect(0, 0, 20, 20), '#999')\n            g.draw_glyph(8592, 0, 0, 'base', 'black', 1)\n            g.fill(new Rect(this.size().w - 20, 0, 20, 20), '#999')\n            g.draw_glyph(8594, this.size().w - 20, 0, 'base', 'black', 1)\n        }\n    }\n\n    input(e: CoolEvent) {\n        if (e.category !== POINTER_CATEGORY) return\n        let event = e as PointerEvent\n        if (event.type === POINTER_DOWN) {\n            if (this.vert) {\n                if (event.position.y < 20) {\n                    this.wrapper.yoff += 20\n                }\n                if (event.position.y > this.size().h - 20) {\n                    this.wrapper.yoff -= 20\n                }\n            } else {\n                if (event.position.x < 20) {\n                    this.wrapper.xoff += 20\n                }\n                if (event.position.x > this.size().w - 20) {\n                    this.wrapper.xoff -= 20\n                }\n            }\n        }\n        if (event.type === POINTER_DRAG) {\n            let viewport_size = this.wrapper.size()\n            let content_size = this.wrapper.get_children()[0].size()\n            if (this.vert) {\n                let fract = viewport_size.h / content_size.h\n                this.wrapper.yoff -= event.delta.y / fract\n            } else {\n                let fract = viewport_size.w / content_size.w\n                this.wrapper.xoff -= event.delta.x / fract\n            }\n            event.ctx.repaint()\n        }\n        if (event.type === 'wheel') {\n            let viewport_size = this.wrapper.size()\n            let content_size = this.wrapper.get_children()[0].size()\n            if (this.vert) {\n                let fract = viewport_size.h / content_size.h\n                this.wrapper.yoff -= event.delta.y / fract\n            } else {\n                let fract = viewport_size.w / content_size.w\n                this.wrapper.xoff -= event.delta.x / fract\n            }\n            event.ctx.repaint()\n        }\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        return this.size()\n    }\n}\n\nexport class ScrollView extends BaseParentView {\n    private hbar: ScrollBar;\n    private vbar: ScrollBar\n    private content: View\n    private wrapper: ScrollWrapper;\n    private up: ActionButton;\n    private down: ActionButton;\n    private _pref_width: number\n\n    constructor() {\n        super(gen_id(\"scroll-view\"))\n        this._name = 'scroll-view'\n        this._pref_width = 300\n\n        this.wrapper = new ScrollWrapper()\n        this.add(this.wrapper)\n\n        this.hbar = new ScrollBar(false, this.wrapper)\n        // @ts-ignore\n        this.hbar._name = 'h-scroll-bar'\n        this.add(this.hbar)\n        this.vbar = new ScrollBar(true, this.wrapper)\n        // @ts-ignore\n        this.vbar._name = 'v-scroll-bar'\n        this.add(this.vbar)\n\n    }\n\n\n    draw(g: SurfaceContext): void {\n        g.fillBackgroundSize(this.size(), '#aaa')\n    }\n\n    set_pref_width(num: number) {\n        this._pref_width = num\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        this.set_size(new Size(this._pref_width, 300))\n        if (this.hflex()) {\n            this.size().w = available.w\n        }\n        if (this.vflex()) {\n            this.size().h = available.h\n        }\n        let ws = this.size().shrink(10)\n        this.get_children().forEach(ch => {\n            if (ch == this.wrapper) {\n                ch.layout(g, ws)\n            } else {\n                ch.layout(g, available)\n            }\n        })\n        this.hbar.set_size(new Size(this.size().w - 20, 20))\n        this.hbar.set_position(new Point(0, this.size().h - this.hbar.size().h))\n        this.vbar.set_size(new Size(20, this.size().h - 20))\n        this.vbar.set_position(new Point(this.size().w - this.vbar.size().w, 0))\n        return this.size()\n    }\n\n    set_content(view: View) {\n        this.content = view\n        this.wrapper.add(view)\n    }\n}\n\nexport class PopupContainer extends BaseParentView {\n    constructor() {\n        super(gen_id(\"popupcontainer\"))\n        this._name = \"popup_container\"\n    }\n\n    draw(g: SurfaceContext): void {\n        g.fillBackgroundSize(this.size(), 'gray')\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        let box = this._children[0]\n        let size = box.layout(g, new Size(1000, 1000))\n        this.set_size(size)\n        return new Size(size.w, size.h)\n    }\n\n    open_at(position: Point) {\n        this.set_position(position)\n    }\n\n    hide() {\n        this._visible = false\n        console.log(\"hiding\", this._visible)\n    }\n}\n\nexport class PopupLayer extends LayerView {\n    constructor() {\n        super(gen_id('popup-layer'))\n        this._name = 'popup-layer'\n    }\n\n    draw(g: SurfaceContext) {\n        if (this._children.length > 0) g.fillBackgroundSize(this.size(), 'rgba(255,255,255,0.7)')\n    }\n\n    input(event: CoolEvent) {\n        if (event.type === POINTER_DOWN) {\n            this._children = []\n            event.stopped = true\n        }\n    }\n\n    override can_receive_mouse(): boolean {\n        if (this.get_children().length > 0) return true\n        return false\n    }\n}\n\nexport class DialogLayer extends LayerView {\n    constructor() {\n        super(gen_id('dialog-layer'))\n        this._name = 'dialog-layer'\n    }\n\n    draw(g: SurfaceContext) {\n        if (this._children.length > 0) g.fillBackgroundSize(this.size(), 'rgba(255,255,255,0.7)')\n    }\n}\n\nexport class DialogContainer extends BaseParentView {\n    constructor() {\n        super(\"dialog-container\")\n        this._name = 'dialog-container'\n        this.set_size(new Size(250,250))\n    }\n\n    draw(g: SurfaceContext): void {\n        g.fillBackgroundSize(this.size(), 'gray')\n    }\n\n    layout(g: SurfaceContext, available: Size): Size {\n        let box = this._children[0]\n        let size = box.layout(g, this.size())//new Size(600, 600))\n        // this.set_size(size)\n        this.set_position(new Point(\n            (g.size().w - size.w) / 2,\n            (g.size().h - size.h) / 2\n        ))\n        return new Size(size.w, size.h)\n    }\n}\n\nexport class KeystrokeCaptureView extends LayerView {\n    constructor(main_view: View) {\n        super(gen_id(\"keystroke_capture_view\"))\n        this._name = 'keystroke-capture-view'\n        this.add(main_view)\n    }\n\n    override input(event: CoolEvent) {\n        if (event.category === KEYBOARD_CATEGORY) {\n            let kb = event as KeyboardEvent\n            // this.log(\"got kb\", kb)\n            if (kb.key === 's' && kb.modifiers.meta === true) {\n                // console.log(\"intercepting save\")\n                // @ts-ignore\n                event.domEvent.preventDefault()\n                kb.stopped = true\n            }\n            if (kb.key === 'd' && kb.modifiers.meta === true && kb.modifiers.ctrl === true) {\n                // console.log(\"toggling debug\")\n            }\n        }\n        super.input(event);\n    }\n}","export function randi(min: number, max: number) {\n    return Math.floor(min + Math.random() * (max - min))\n}\n\n","import {\n    BaseParentView,\n    BaseView, COMMAND_CHANGE,\n    CoolEvent, gen_id,\n    ParentView, Point,\n    POINTER_CATEGORY,\n    POINTER_DOWN,\n    POINTER_DRAG,\n    PointerEvent, Size,\n    View,\n    with_change\n} from \"./core\";\nimport {CanvasSurface, rect_from_pos_size} from \"./canvas\";\nimport {Label, ToggleButton} from \"./components\";\nimport {LayerView, VBox} from \"./containers\";\n\nexport class DebugLensGlass extends BaseView {\n    private _draw_names: boolean;\n    private draw_sizes: boolean;\n    private draw_bounds: boolean;\n    private draw_flex: boolean;\n    private draw_align: boolean;\n    private lens: DebugLens;\n\n    constructor(p: DebugLens, size: Size) {\n        super(gen_id('debug-glass'));\n        this.lens = p\n        this._name = 'debug-lens-glass'\n        this.set_size(size)\n    }\n\n    layout(g: CanvasSurface, available: Size): Size {\n        return this.size()\n    }\n\n    override draw(g: CanvasSurface) {\n        let root = g.root()\n        g.ctx.save()\n        g.ctx.beginPath()\n        let size = this.size()\n        g.ctx.rect(0, 0, size.w, size.h);\n        g.ctx.clip()\n        let trans = g.view_to_local(new Point(0, 0), this)\n        g.ctx.translate(-trans.x, -trans.y)\n        this.draw_outline(g, root)\n        this.draw_selected(g)\n        g.ctx.restore()\n    }\n\n    private draw_outline(g: CanvasSurface, view: View) {\n        if (view.name() === 'debug-layer') return\n        let pos = view.position()\n        let size = view.size()\n        g.ctx.save()\n        if (this.draw_bounds) {\n            g.ctx.strokeStyle = 'black'\n            g.ctx.lineWidth = 1\n            for(let s=1; s<4; s++) {\n                g.ctx.strokeStyle = (s%2==0)?'red':'black'\n                g.ctx.beginPath()\n                g.ctx.rect(pos.x + s, pos.y + s, size.w - s * 2, size.h - s * 2)\n                g.ctx.stroke()\n            }\n        }\n\n        function draw_debug_text(g, pos, text) {\n            let metrics = g.measureText(text, 'base')\n            g.ctx.save()\n            g.ctx.translate(pos.x, pos.y)\n            g.ctx.fillStyle = 'white'\n            g.ctx.fillRect(0, 0, metrics.w + 4, 10 + 4 + 4)\n            g.ctx.strokeStyle = 'black'\n            g.ctx.lineWidth = 1\n            g.ctx.strokeRect(0, 0, metrics.w + 4, 10 + 4 + 4)\n            g.ctx.fillStyle = 'black'\n            g.fillStandardText(text, 4, 10 + 4 + 4, 'base')\n            g.ctx.restore()\n        }\n\n        if (this._draw_names) {\n            draw_debug_text(g, pos.add(new Point(5, 5)), view.name())\n        }\n        if (this.draw_sizes) {\n            let size = view.size()\n            let text = `${size.w.toFixed(1)} x ${size.h.toFixed(1)}`\n            draw_debug_text(g, pos.add(new Point(5, 25)), text)\n        }\n\n        if(this.draw_flex) {\n            let text = `hflex=${view.hflex()} vflex=${view.vflex()}`\n            draw_debug_text(g, pos.add(new Point(5, 35)), text)\n        }\n        if(this.draw_align) {\n            if('halign' in view) {\n                // @ts-ignore\n                let text = `halign=${view.halign}`\n                draw_debug_text(g, pos.add(new Point(5, 45)), text)\n            }\n            if('valign' in view) {\n                // @ts-ignore\n                let text = `valign=${view.valign}`\n                draw_debug_text(g, pos.add(new Point(5, 45)), text)\n            }\n        }\n\n        function is_parent(view: View) {\n            // @ts-ignore\n            return view.is_parent_view && view.is_parent_view()\n        }\n\n        function as_parent(view: View): ParentView {\n            return view as unknown as ParentView\n        }\n\n        if (is_parent(view)) {\n            let parent = as_parent(view)\n            g.ctx.save()\n            g.ctx.translate(pos.x, pos.y)\n            parent.get_children().forEach((ch: View) => {\n                this.draw_outline(g, ch)\n            })\n            g.ctx.restore()\n        }\n        g.ctx.restore()\n    }\n\n    draw_names():boolean {\n        return this._draw_names\n    }\n    set_draw_names(selected: boolean) {\n        this._draw_names = selected\n    }\n    set_draw_sizes(selected: boolean) {\n        this.draw_sizes = selected\n    }\n    set_draw_bounds(selected: boolean) {\n        this.draw_bounds = selected\n    }\n    set_draw_flex(selected: boolean) {\n        this.draw_flex = selected\n    }\n    set_draw_align(selected: boolean) {\n        this.draw_align = selected\n    }\n\n    override input(event: CoolEvent) {\n        // this.log(event)\n        if(event.type === POINTER_DOWN) {\n            let p = event as PointerEvent\n            let p2 = event.ctx.view_to_local(p.position, this)\n            this.log(\"global\",p2)\n            let views = []\n            let should_recurse = (view:View) => {\n                if(!view.visible()) return false\n                if(view.name() === 'debug-layer') return false\n                if(view.name() === 'debug-lens') return false\n                return true\n            }\n            let should_include = (view:View) => {\n                if(view.name() === 'dialog-layer') return false\n                if(view.name() === 'debug-layer') return false\n                if(view.name() === 'popup-layer') return false\n                if(view.name() === 'debug-lens') return false\n                if(view.name() === 'debug-lens-glass') return false\n                return true\n            }\n            this.pick_under_cursor(event.ctx.root(),p2, views, should_recurse, should_include);\n            this.log(\"path is\",views)\n            this.lens.set_selected(views[views.length-1])\n        }\n    }\n    private pick_under_cursor(view: View, cursor: Point, views: View[], should_recurse: (view: View) => boolean, should_include: (view: View) => (boolean)) {\n        if(!should_recurse(view)) return\n        if(view.size().contains(cursor) && should_include(view)) {\n            views.push(view)\n        }\n        // @ts-ignore\n        if (view.is_parent_view && view.is_parent_view()) {\n            let parent = view as unknown as ParentView;\n            // this.log(\"going into parent\",view.name())\n            let chs = parent.get_children()\n            chs.forEach(ch => {\n                this.pick_under_cursor(ch, cursor.subtract(ch.position()), views, should_recurse, should_include)\n            })\n        }\n    }\n\n    private draw_selected(g: CanvasSurface) {\n        if(!this.lens._selected) return\n        let trans = g.view_to_local(new Point(0,0),this.lens._selected)\n        // this.log(\"trans\",trans)\n        // this.log(\"selected is\", this._selected.name())\n        // let me_trans = g.view_to_local(new Point(0,0,),this)\n        // this.log(\"me_trans = \", me_trans)\n        let rect = rect_from_pos_size(trans,this.lens._selected.size())\n        g.stroke(rect,'red')\n    }\n}\n\nexport class ResizeHandle extends BaseView {\n    private lens: DebugLens;\n\n    constructor(lens: DebugLens) {\n        super(gen_id('debug-lens-resize'))\n        this._name = 'debug-lens-resize-handle'\n        this.lens = lens\n        this.set_size(new Size(20, 20))\n    }\n\n    override input(event: CoolEvent) {\n        if (event.category === POINTER_CATEGORY) {\n            let pt = event as PointerEvent\n            if(event.type === POINTER_DRAG) {\n                this.lens.set_size(this.lens.size().add(pt.delta))\n            }\n            event.stopped = true\n            event.ctx.repaint()\n        }\n    }\n\n    draw(g: CanvasSurface): void {\n        g.fillBackgroundSize(this.size(), '#888')\n        g.draw_glyph(2921, 2, 0, 'base', 'black')\n    }\n\n    layout(g: CanvasSurface, available: Size): Size {\n        return this.size()\n    }\n\n}\n\nclass DebugPropSheet extends BaseParentView{\n    private lens: DebugLens;\n    private vbox: VBox;\n    constructor(lens:DebugLens) {\n        super(\"debug-prop-sheet\")\n        this.lens = lens\n        this.lens.on('select',()=>this.rebuild())\n        this.vbox = new VBox()\n        this.add(this.vbox);\n    }\n    override draw(g: CanvasSurface) {\n        g.fillBackgroundSize(this.size(),'white')\n    }\n\n    layout(g: CanvasSurface, available: Size): Size {\n        this.get_children().forEach(ch => {\n            ch.layout(g, available)\n        })\n        this.set_size(new Size(this.vbox.size().w,this.vbox.size().h))\n        return this.size()\n    }\n\n    private rebuild() {\n        let sel = this.lens._selected\n        this.log(\"rebuilding prop sheet for \",sel)\n        this.vbox.clear_children()\n\n        this.vbox.add(new Label(\"id\"))\n        // @ts-ignore\n        this.vbox.add(new Label(sel.id))\n\n        this.vbox.add(new Label(\"name\"))\n        this.vbox.add(new Label(sel.name()))\n\n        this.vbox.add(new Label(`hflex: ${sel.hflex()}`))\n        this.vbox.add(new Label(`vflex: ${sel.vflex()}`))\n\n        this.vbox.add(new Label(`size: ${sel.size().toString()}`))\n    }\n}\n\nexport class DebugLens extends BaseParentView {\n    private vbox: VBox;\n    private sidebar_width:number\n    private sidebar_right:boolean\n    private glass: DebugLensGlass;\n    private resize_handle: ResizeHandle;\n    private propsheet: DebugPropSheet;\n    _selected: View | null;\n\n    constructor() {\n        super(gen_id('debug-lens'));\n        this._name = 'debug-lens'\n        this.set_size(new Size(400, 300))\n        let vbox = new VBox()\n        vbox.set_name('debug-lens-vbox')\n        vbox.halign = 'left'\n        this.vbox = vbox\n        this.sidebar_right = false\n        this.sidebar_width = 200\n        vbox.add(with_change(new ToggleButton('right'),\n            (e)=> this.sidebar_right = !this.sidebar_right))\n        vbox.add(with_change(new ToggleButton('names'),\n            (e) => this.glass.set_draw_names(e.target.selected)))\n        vbox.add(with_change(new ToggleButton('bounds'),\n            (e) => this.glass.set_draw_bounds(e.target.selected)))\n        this.propsheet = new DebugPropSheet(this)\n        vbox.add(this.propsheet)\n        this.add(vbox)\n        this.glass = new DebugLensGlass(this,this.size())\n        this.add(this.glass)\n        this.resize_handle = new ResizeHandle(this)\n        this.add(this.resize_handle)\n    }\n\n    override input(event: CoolEvent) {\n        if (event.type === POINTER_DOWN) {\n            // console.log('starting at',event)\n        }\n        if (event.type === POINTER_DRAG) {\n            if(event.target !== this) return\n            this.set_position(this.position().add((event as PointerEvent).delta))\n            event.ctx.repaint()\n        }\n    }\n    override can_receive_mouse(): boolean {\n        return true\n    }\n\n    override draw(g: CanvasSurface) {\n        g.ctx.save()\n        g.ctx.fillStyle = '#a0a0a0'\n        let s = this.size()\n        g.ctx.fillRect(0, 0, s.w, 20)\n        if(this.sidebar_right) {\n            g.ctx.fillRect(0, 0, 20, s.h)\n            g.ctx.fillRect(s.w - this.sidebar_width, 0, this.sidebar_width, s.h)\n            g.ctx.strokeRect(20, 20, this.size().w-this.sidebar_width-20, this.size().h-20-20)\n        } else {\n            g.ctx.fillRect(0, 0, this.sidebar_width, s.h)\n            g.ctx.fillRect(s.w - 20, 0, 20, s.h)\n            g.ctx.strokeRect(this.sidebar_width, 20, this.size().w-this.sidebar_width-20, this.size().h-20-20)\n        }\n        g.ctx.fillRect(0, s.h - 20, s.w, 20)\n        g.ctx.strokeStyle = '#444'\n        g.ctx.strokeRect(0, 0, this.size().w, this.size().h)\n        g.fillStandardText('debug lens', 10, 20, 'base')\n        let txt = `size: ${this.glass.size().w} x ${this.glass.size().h}`\n        let metrics = g.measureText(txt,'base')\n        g.fillStandardText(txt, (this.size().w-metrics.w)/2,this.size().h,'base')\n        g.ctx.restore()\n    }\n\n    layout(g: CanvasSurface, available: Size): Size {\n        this.get_children().forEach(ch => {\n            ch.layout(g, available)\n        })\n        let s = this.size()\n        if(this.sidebar_right) {\n            this.vbox.set_position(new Point(s.w-this.sidebar_width, 20))\n            this.glass.set_position(new Point(20, 20))\n        } else {\n            this.vbox.set_position(new Point(0, 20))\n            this.glass.set_position(new Point(this.sidebar_width, 20))\n        }\n        this.glass.set_size(new Size(s.w - this.sidebar_width - 20, s.h - 20 - 20))\n        this.resize_handle.set_position(new Point(s.w - 20, s.h - 20))\n        return this.size()\n    }\n\n    set_visible(b: boolean) {\n        this._visible = b\n    }\n\n    set_selected(view: View | null) {\n        this._selected = view\n        this.fire('select',this._selected)\n    }\n}\n\nexport class DebugLayer extends LayerView {\n    private button: ToggleButton;\n    constructor() {\n        super(\"debug-layer\");\n        this._name = 'debug-layer'\n        let dl = new DebugLens()\n        dl.set_visible(false)\n        this.add(dl)\n        this.button = new ToggleButton('D')\n        this.button.on(COMMAND_CHANGE,() => {\n            dl.set_visible(!dl.visible())\n        })\n        this.add(this.button)\n    }\n    layout(g: CanvasSurface, available: Size): Size {\n        this.button.layout(g,available)\n        super.layout(g, available);\n        let s = this.size()\n        let b = this.button.size()\n        this.button.set_position(new Point(s.w - b.w,s.h - b.h))\n        return this.size()\n    }\n}\n","import {BaseParentView, BaseView, gen_id, Point, Size, View} from \"./core\";\nimport {CanvasSurface} from \"./canvas\";\nimport {ScrollView} from \"./containers\";\n\nclass TableHeaderView extends BaseView {\n    private table: TableView;\n\n    constructor(table: TableView) {\n        super(gen_id('table-header-view'));\n        this.table = table\n        this._name = 'table-header-view'\n    }\n\n    draw(g: CanvasSurface): void {\n        g.fillBackgroundSize(this.size(), '#f0f0f0')\n        // this.log(\"drawing\",this.size())\n        let x = 0\n        let y = 20\n        this.table.columns_keys.forEach((key, k) => {\n            let tx = x + 0\n            g.fillRect(tx, 0, 1, 20, 'black')\n            g.fillStandardText(key, tx + 5, y, 'base')\n            x += this.table.columns_widths[k]\n        })\n    }\n\n    layout(g: CanvasSurface, available: Size): Size {\n        this.set_size(new Size(available.w, 20))\n        return this.size()\n    }\n}\n\nclass TableGridView extends BaseView {\n    private table: TableView;\n\n    constructor(table: TableView) {\n        super(gen_id('table-grid-view'));\n        this._name = 'table-grid-view'\n        this.table = table\n    }\n\n    draw(g: CanvasSurface): void {\n        let h = 20\n        let gw = this.size().w\n        for (let i = 0; i < this.table.data.length; i++) {\n            let row = this.table.data[i]\n            let y = i * h\n            let x = 0\n            this.table.columns_keys.forEach((key, k) => {\n                let col_width = this.table.columns_widths[k]\n                let tx = x\n                g.fillRect(tx, y, 1, 20, 'black')\n                g.fillRect(tx, y, gw, 1, 'black')\n                let txt = row[key]\n                let m = g.measureText(txt, 'base')\n                if (m.w > col_width) {\n                    g.fillRect(tx, y, col_width, 20, 'red')\n                }\n                g.fillStandardText(txt, tx + 5, y + 20, 'base')\n                x += col_width\n            })\n        }\n    }\n\n    layout(g: CanvasSurface, available: Size): Size {\n        this.set_size(new Size(available.w, this.table.data.length * 20))\n        return this.size()\n    }\n\n}\n\nexport class TableView extends BaseParentView {\n    data: any[];\n    private header: View;\n    private scroll: ScrollView;\n    private grid: TableGridView;\n    columns_keys: string[];\n    columns_widths: number[];\n\n\n    constructor(songs: any[], columns_keys: string[], columns_widths: number[]) {\n        super(gen_id('table-view'))\n        this.data = songs\n        this.columns_keys = columns_keys\n        this.columns_widths = columns_widths\n        this.header = new TableHeaderView(this)\n        this.add(this.header)\n        this.scroll = new ScrollView()\n        this.scroll.set_hflex(true)\n        this.scroll.set_vflex(true)\n        this.add(this.scroll)\n        this.grid = new TableGridView(this)\n        this.scroll.set_content(this.grid)\n        this.set_hflex(true)\n        this.set_vflex(true)\n    }\n\n    override draw(g: CanvasSurface) {\n        super.draw(g);\n    }\n\n    layout(g: CanvasSurface, available: Size): Size {\n        // this.log('layout. avail',available)\n        if (this.hflex && this.vflex) {\n            this.set_size(available)\n        } else {\n            this.set_size(new Size(200, 200))\n        }\n        // layout header\n        this.header.layout(g, this.size())\n        let s2 = new Size(this.size().w, this.size().h - 20)\n        this.scroll.layout(g, s2)\n        this.scroll.set_position(new Point(0, 20))\n        // layout scroll view\n        // layout the grid?\n        return this.size()\n    }\n}"],"names":[],"version":3,"file":"index.js.map"}